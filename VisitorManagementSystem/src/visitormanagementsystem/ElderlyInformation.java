/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package visitormanagementsystem;

import java.awt.*;
import java.sql.*;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author justi
 */
public class ElderlyInformation extends javax.swing.JFrame {

    /**
     * Creates new form Dashboard
     */
    
    ImageIcon logo = new ImageIcon("C:\\Users\\justi\\Desktop\\Programming\\Java\\VisitorManagementSystem\\src\\assets\\SJCF_LOGO.png");
    
    public ElderlyInformation() {
        initComponents();
        setBackground(new Color(0,0,0,0));
        elderlyLastTextField.setFocusable(false);
        elderlyFirstTextField.setFocusable(false);
        elderlyMiddleTextField.setFocusable(false);
        elderlySuffix.setFocusable(false);
        elderlyGender.setFocusable(false);
        elderlyBirthdate.setFocusable(false);
        elderlyContact.setFocusable(false);
        elderlyGuardian.setFocusable(false);
        elderlyStreet.setFocusable(false);
        elderlyBrgy.setFocusable(false);
        elderlyCity.setFocusable(false);
        elderlyProvince.setFocusable(false);
        elderlyAdmitDate.setFocusable(false);
        elderlyRoomNo.setFocusable(false);
        elderlyAttendantID.setFocusable(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dashboardNavBG = new javax.swing.JPanel();
        stJudetxt = new javax.swing.JLabel();
        adminSettings = new javax.swing.JLabel();
        careFacilitytxt = new javax.swing.JLabel();
        adminLogo = new javax.swing.JLabel();
        minimizeWhiteLogo = new javax.swing.JLabel();
        closeWhiteLogo = new javax.swing.JLabel();
        dashboardSideBarBG = new javax.swing.JPanel();
        reportText = new javax.swing.JLabel();
        reportLogo = new javax.swing.JLabel();
        visitorText = new javax.swing.JLabel();
        visitorLogo = new javax.swing.JLabel();
        elderlyText = new javax.swing.JLabel();
        elderlyLogo = new javax.swing.JLabel();
        dashboardText = new javax.swing.JLabel();
        dashboardLogo = new javax.swing.JLabel();
        attendantLogo = new javax.swing.JLabel();
        attendantText = new javax.swing.JLabel();
        elderlyInformationText = new javax.swing.JLabel();
        personalInfoBG = new javax.swing.JPanel();
        elderlyBirthdateText = new javax.swing.JLabel();
        elderlyLastTextField = new javax.swing.JTextField();
        elderlyFirstTextField = new javax.swing.JTextField();
        elderlyMiddleTextField = new javax.swing.JTextField();
        personalInfoText = new javax.swing.JLabel();
        elderlyGuardianText = new javax.swing.JLabel();
        elderlyFirstText = new javax.swing.JLabel();
        elderlyMiddleText = new javax.swing.JLabel();
        elderlyAdmitDate = new com.toedter.calendar.JDateChooser();
        elderlySuffix = new javax.swing.JTextField();
        elderlyLastName = new javax.swing.JLabel();
        elderlyContact = new javax.swing.JTextField();
        elderlyProvinceText = new javax.swing.JLabel();
        elderlyGuardian = new javax.swing.JTextField();
        elderlyContactNoText = new javax.swing.JLabel();
        elderlySuffixText = new javax.swing.JLabel();
        elderlyStreet = new javax.swing.JTextField();
        elderlyAttendantIDText = new javax.swing.JLabel();
        elderlyBrgy = new javax.swing.JTextField();
        elderlyStreetText = new javax.swing.JLabel();
        elderlyCity = new javax.swing.JTextField();
        elderlyBrgyText = new javax.swing.JLabel();
        elderlyProvince = new javax.swing.JTextField();
        elderlyCityText = new javax.swing.JLabel();
        elderlyAddressText = new javax.swing.JLabel();
        elderlyBirthdate = new com.toedter.calendar.JDateChooser();
        elderlyAttendantID = new javax.swing.JTextField();
        elderlyAdmitDateText = new javax.swing.JLabel();
        addElderlyButton = new javax.swing.JButton();
        elderlyGender = new javax.swing.JTextField();
        elderlyGenderText = new javax.swing.JLabel();
        elderlyRoomNoText1 = new javax.swing.JLabel();
        elderlyRoomNo = new javax.swing.JTextField();
        backButton = new javax.swing.JButton();
        elderlyBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("St. Jude Care Facility");
        setIconImage(logo.getImage());
        setName("dashboardFrame"); // NOI18N
        setUndecorated(true);
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        dashboardNavBG.setBackground(new java.awt.Color(129, 159, 29));
        dashboardNavBG.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        stJudetxt.setFont(new java.awt.Font("Segoe UI Black", 1, 36)); // NOI18N
        stJudetxt.setForeground(new java.awt.Color(255, 255, 255));
        stJudetxt.setText("St. Jude");
        stJudetxt.setFocusable(false);
        dashboardNavBG.add(stJudetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 160, 60));

        adminSettings.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        adminSettings.setForeground(new java.awt.Color(255, 255, 255));
        adminSettings.setText("ADMINISTRATOR");
        adminSettings.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        adminSettings.setFocusable(false);
        adminSettings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                adminSettingsMouseClicked(evt);
            }
        });
        dashboardNavBG.add(adminSettings, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 0, -1, 60));

        careFacilitytxt.setFont(new java.awt.Font("Segoe UI Light", 1, 36)); // NOI18N
        careFacilitytxt.setForeground(new java.awt.Color(255, 255, 255));
        careFacilitytxt.setText("Care Facility");
        careFacilitytxt.setFocusable(false);
        dashboardNavBG.add(careFacilitytxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 0, -1, 60));

        adminLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/adminLogo.png"))); // NOI18N
        adminLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        adminLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                adminLogoMouseClicked(evt);
            }
        });
        dashboardNavBG.add(adminLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 10, -1, -1));

        minimizeWhiteLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/minimizeWhiteLogo.png"))); // NOI18N
        minimizeWhiteLogo.setToolTipText("Minimize");
        minimizeWhiteLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimizeWhiteLogo.setFocusable(false);
        minimizeWhiteLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeWhiteLogoMouseClicked(evt);
            }
        });
        dashboardNavBG.add(minimizeWhiteLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 20, -1, -1));

        closeWhiteLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/closeWhiteLogo.png"))); // NOI18N
        closeWhiteLogo.setToolTipText("Close");
        closeWhiteLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        closeWhiteLogo.setFocusable(false);
        closeWhiteLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeWhiteLogoMouseClicked(evt);
            }
        });
        dashboardNavBG.add(closeWhiteLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 20, -1, -1));

        getContentPane().add(dashboardNavBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1020, 60));

        dashboardSideBarBG.setBackground(new java.awt.Color(42, 52, 11));
        dashboardSideBarBG.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        reportText.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        reportText.setForeground(new java.awt.Color(255, 255, 255));
        reportText.setText("REPORT");
        reportText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        reportText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reportTextMouseClicked(evt);
            }
        });
        dashboardSideBarBG.add(reportText, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 520, -1, -1));

        reportLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/reportLogo.png"))); // NOI18N
        reportLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        reportLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reportLogoMouseClicked(evt);
            }
        });
        reportLogo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                reportLogoKeyPressed(evt);
            }
        });
        dashboardSideBarBG.add(reportLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 450, -1, -1));

        visitorText.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        visitorText.setForeground(new java.awt.Color(255, 255, 255));
        visitorText.setText("VISITOR");
        visitorText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        visitorText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                visitorTextMouseClicked(evt);
            }
        });
        dashboardSideBarBG.add(visitorText, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, -1, -1));

        visitorLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/visitorLogo.png"))); // NOI18N
        visitorLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        visitorLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                visitorLogoMouseClicked(evt);
            }
        });
        dashboardSideBarBG.add(visitorLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, -1, -1));

        elderlyText.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        elderlyText.setForeground(new java.awt.Color(255, 255, 255));
        elderlyText.setText("ELDERLY");
        elderlyText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        elderlyText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                elderlyTextMouseClicked(evt);
            }
        });
        dashboardSideBarBG.add(elderlyText, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, -1, -1));

        elderlyLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/elderlyLogo.png"))); // NOI18N
        elderlyLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        elderlyLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                elderlyLogoMouseClicked(evt);
            }
        });
        dashboardSideBarBG.add(elderlyLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, -1, -1));

        dashboardText.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        dashboardText.setForeground(new java.awt.Color(255, 255, 255));
        dashboardText.setText("DASHBOARD");
        dashboardText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dashboardText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashboardTextMouseClicked(evt);
            }
        });
        dashboardSideBarBG.add(dashboardText, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        dashboardLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/dashboardLogo.png"))); // NOI18N
        dashboardLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dashboardLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashboardLogoMouseClicked(evt);
            }
        });
        dashboardSideBarBG.add(dashboardLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, -1, -1));

        attendantLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/attendantLogo.png"))); // NOI18N
        attendantLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        attendantLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attendantLogoMouseClicked(evt);
            }
        });
        dashboardSideBarBG.add(attendantLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, -1, -1));

        attendantText.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        attendantText.setForeground(new java.awt.Color(255, 255, 255));
        attendantText.setText("ATTENDANT");
        attendantText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        attendantText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attendantTextMouseClicked(evt);
            }
        });
        dashboardSideBarBG.add(attendantText, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, -1, -1));

        getContentPane().add(dashboardSideBarBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 160, 560));

        elderlyInformationText.setFont(new java.awt.Font("Verdana Pro Black", 1, 28)); // NOI18N
        elderlyInformationText.setForeground(new java.awt.Color(129, 159, 29));
        elderlyInformationText.setText("ELDERLY INFORMATION");
        elderlyInformationText.setFocusable(false);
        getContentPane().add(elderlyInformationText, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 70, 420, 30));

        personalInfoBG.setBackground(new java.awt.Color(255, 255, 255));
        personalInfoBG.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(129, 159, 29), 5, true));
        personalInfoBG.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        elderlyBirthdateText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        elderlyBirthdateText.setForeground(new java.awt.Color(107, 132, 22));
        elderlyBirthdateText.setText("Birthdate*");
        elderlyBirthdateText.setFocusable(false);
        personalInfoBG.add(elderlyBirthdateText, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 80, 20));

        elderlyLastTextField.setBackground(new java.awt.Color(231, 228, 228));
        elderlyLastTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        elderlyLastTextField.setForeground(new java.awt.Color(107, 132, 22));
        elderlyLastTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        elderlyLastTextField.setToolTipText("Last Name");
        elderlyLastTextField.setBorder(null);
        elderlyLastTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                elderlyLastTextFieldMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                elderlyLastTextFieldMousePressed(evt);
            }
        });
        elderlyLastTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elderlyLastTextFieldActionPerformed(evt);
            }
        });
        personalInfoBG.add(elderlyLastTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 180, 40));

        elderlyFirstTextField.setBackground(new java.awt.Color(231, 228, 228));
        elderlyFirstTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        elderlyFirstTextField.setForeground(new java.awt.Color(107, 132, 22));
        elderlyFirstTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        elderlyFirstTextField.setToolTipText("First Name");
        elderlyFirstTextField.setBorder(null);
        elderlyFirstTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                elderlyFirstTextFieldMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                elderlyFirstTextFieldMousePressed(evt);
            }
        });
        elderlyFirstTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elderlyFirstTextFieldActionPerformed(evt);
            }
        });
        personalInfoBG.add(elderlyFirstTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, 180, 40));

        elderlyMiddleTextField.setBackground(new java.awt.Color(231, 228, 228));
        elderlyMiddleTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        elderlyMiddleTextField.setForeground(new java.awt.Color(107, 132, 22));
        elderlyMiddleTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        elderlyMiddleTextField.setToolTipText("Middle Name");
        elderlyMiddleTextField.setBorder(null);
        elderlyMiddleTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                elderlyMiddleTextFieldMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                elderlyMiddleTextFieldMousePressed(evt);
            }
        });
        elderlyMiddleTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elderlyMiddleTextFieldActionPerformed(evt);
            }
        });
        personalInfoBG.add(elderlyMiddleTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 60, 190, 40));

        personalInfoText.setFont(new java.awt.Font("Verdana Pro Black", 1, 18)); // NOI18N
        personalInfoText.setForeground(new java.awt.Color(183, 216, 72));
        personalInfoText.setText("PERSONAL INFORMATION");
        personalInfoText.setFocusable(false);
        personalInfoBG.add(personalInfoText, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 300, 20));

        elderlyGuardianText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        elderlyGuardianText.setForeground(new java.awt.Color(107, 132, 22));
        elderlyGuardianText.setText("Guardian Name*");
        elderlyGuardianText.setFocusable(false);
        personalInfoBG.add(elderlyGuardianText, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 110, 110, 20));

        elderlyFirstText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        elderlyFirstText.setForeground(new java.awt.Color(107, 132, 22));
        elderlyFirstText.setText("First Name*");
        elderlyFirstText.setFocusable(false);
        personalInfoBG.add(elderlyFirstText, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 40, 80, 20));

        elderlyMiddleText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        elderlyMiddleText.setForeground(new java.awt.Color(107, 132, 22));
        elderlyMiddleText.setText("Middle Name");
        elderlyMiddleText.setFocusable(false);
        personalInfoBG.add(elderlyMiddleText, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 40, 80, 20));

        elderlyAdmitDate.setBackground(new java.awt.Color(231, 228, 228));
        elderlyAdmitDate.setForeground(new java.awt.Color(107, 132, 22));
        elderlyAdmitDate.setToolTipText("Admit Date");
        elderlyAdmitDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        personalInfoBG.add(elderlyAdmitDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, 290, 40));

        elderlySuffix.setBackground(new java.awt.Color(231, 228, 228));
        elderlySuffix.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        elderlySuffix.setForeground(new java.awt.Color(107, 132, 22));
        elderlySuffix.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        elderlySuffix.setToolTipText("Suffix Name");
        elderlySuffix.setBorder(null);
        elderlySuffix.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                elderlySuffixMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                elderlySuffixMousePressed(evt);
            }
        });
        elderlySuffix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elderlySuffixActionPerformed(evt);
            }
        });
        personalInfoBG.add(elderlySuffix, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 60, 80, 40));

        elderlyLastName.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        elderlyLastName.setForeground(new java.awt.Color(107, 132, 22));
        elderlyLastName.setText("Last Name*");
        elderlyLastName.setFocusable(false);
        personalInfoBG.add(elderlyLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 80, 20));

        elderlyContact.setBackground(new java.awt.Color(231, 228, 228));
        elderlyContact.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        elderlyContact.setForeground(new java.awt.Color(107, 132, 22));
        elderlyContact.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        elderlyContact.setToolTipText("Contact Number");
        elderlyContact.setBorder(null);
        elderlyContact.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                elderlyContactMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                elderlyContactMousePressed(evt);
            }
        });
        elderlyContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elderlyContactActionPerformed(evt);
            }
        });
        elderlyContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                elderlyContactKeyTyped(evt);
            }
        });
        personalInfoBG.add(elderlyContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 130, 240, 40));

        elderlyProvinceText.setFont(new java.awt.Font("Verdana", 2, 12)); // NOI18N
        elderlyProvinceText.setForeground(new java.awt.Color(107, 132, 22));
        elderlyProvinceText.setText("Province*");
        elderlyProvinceText.setFocusable(false);
        personalInfoBG.add(elderlyProvinceText, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 250, 110, 20));

        elderlyGuardian.setBackground(new java.awt.Color(231, 228, 228));
        elderlyGuardian.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        elderlyGuardian.setForeground(new java.awt.Color(107, 132, 22));
        elderlyGuardian.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        elderlyGuardian.setToolTipText("Guardian Name");
        elderlyGuardian.setBorder(null);
        elderlyGuardian.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                elderlyGuardianMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                elderlyGuardianMousePressed(evt);
            }
        });
        elderlyGuardian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elderlyGuardianActionPerformed(evt);
            }
        });
        personalInfoBG.add(elderlyGuardian, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 130, 280, 40));

        elderlyContactNoText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        elderlyContactNoText.setForeground(new java.awt.Color(107, 132, 22));
        elderlyContactNoText.setText("Contact Number*");
        elderlyContactNoText.setFocusable(false);
        personalInfoBG.add(elderlyContactNoText, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 110, 110, 20));

        elderlySuffixText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        elderlySuffixText.setForeground(new java.awt.Color(107, 132, 22));
        elderlySuffixText.setText("Suffix Name");
        elderlySuffixText.setFocusable(false);
        personalInfoBG.add(elderlySuffixText, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 40, 80, 20));

        elderlyStreet.setBackground(new java.awt.Color(231, 228, 228));
        elderlyStreet.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        elderlyStreet.setForeground(new java.awt.Color(107, 132, 22));
        elderlyStreet.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        elderlyStreet.setToolTipText("Street");
        elderlyStreet.setBorder(null);
        elderlyStreet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                elderlyStreetMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                elderlyStreetMousePressed(evt);
            }
        });
        elderlyStreet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elderlyStreetActionPerformed(evt);
            }
        });
        personalInfoBG.add(elderlyStreet, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 180, 30));

        elderlyAttendantIDText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        elderlyAttendantIDText.setForeground(new java.awt.Color(107, 132, 22));
        elderlyAttendantIDText.setText("Assign to AttendantID*");
        elderlyAttendantIDText.setFocusable(false);
        personalInfoBG.add(elderlyAttendantIDText, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 300, 150, 20));

        elderlyBrgy.setBackground(new java.awt.Color(231, 228, 228));
        elderlyBrgy.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        elderlyBrgy.setForeground(new java.awt.Color(107, 132, 22));
        elderlyBrgy.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        elderlyBrgy.setToolTipText("Barangay");
        elderlyBrgy.setBorder(null);
        elderlyBrgy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                elderlyBrgyMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                elderlyBrgyMousePressed(evt);
            }
        });
        elderlyBrgy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elderlyBrgyActionPerformed(evt);
            }
        });
        personalInfoBG.add(elderlyBrgy, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 220, 230, 30));

        elderlyStreetText.setFont(new java.awt.Font("Verdana", 2, 12)); // NOI18N
        elderlyStreetText.setForeground(new java.awt.Color(107, 132, 22));
        elderlyStreetText.setText("Street*");
        elderlyStreetText.setFocusable(false);
        personalInfoBG.add(elderlyStreetText, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 110, 20));

        elderlyCity.setBackground(new java.awt.Color(231, 228, 228));
        elderlyCity.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        elderlyCity.setForeground(new java.awt.Color(107, 132, 22));
        elderlyCity.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        elderlyCity.setToolTipText("City");
        elderlyCity.setBorder(null);
        elderlyCity.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                elderlyCityMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                elderlyCityMousePressed(evt);
            }
        });
        elderlyCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elderlyCityActionPerformed(evt);
            }
        });
        personalInfoBG.add(elderlyCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 220, 210, 30));

        elderlyBrgyText.setFont(new java.awt.Font("Verdana", 2, 12)); // NOI18N
        elderlyBrgyText.setForeground(new java.awt.Color(107, 132, 22));
        elderlyBrgyText.setText("Barangay*");
        elderlyBrgyText.setFocusable(false);
        personalInfoBG.add(elderlyBrgyText, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 250, 110, 20));

        elderlyProvince.setBackground(new java.awt.Color(231, 228, 228));
        elderlyProvince.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        elderlyProvince.setForeground(new java.awt.Color(107, 132, 22));
        elderlyProvince.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        elderlyProvince.setToolTipText("Province");
        elderlyProvince.setBorder(null);
        elderlyProvince.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                elderlyProvinceMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                elderlyProvinceMousePressed(evt);
            }
        });
        elderlyProvince.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elderlyProvinceActionPerformed(evt);
            }
        });
        personalInfoBG.add(elderlyProvince, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 220, 130, 30));

        elderlyCityText.setFont(new java.awt.Font("Verdana", 2, 12)); // NOI18N
        elderlyCityText.setForeground(new java.awt.Color(107, 132, 22));
        elderlyCityText.setText("City/Municipality*");
        elderlyCityText.setFocusable(false);
        personalInfoBG.add(elderlyCityText, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 250, 110, 20));

        elderlyAddressText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        elderlyAddressText.setForeground(new java.awt.Color(107, 132, 22));
        elderlyAddressText.setText("Elderly's Address");
        elderlyAddressText.setFocusable(false);
        personalInfoBG.add(elderlyAddressText, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 110, 20));

        elderlyBirthdate.setBackground(new java.awt.Color(231, 228, 228));
        elderlyBirthdate.setForeground(new java.awt.Color(107, 132, 22));
        elderlyBirthdate.setToolTipText("Birth Date");
        elderlyBirthdate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        elderlyBirthdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                elderlyBirthdateMousePressed(evt);
            }
        });
        personalInfoBG.add(elderlyBirthdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 240, 40));

        elderlyAttendantID.setBackground(new java.awt.Color(231, 228, 228));
        elderlyAttendantID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        elderlyAttendantID.setForeground(new java.awt.Color(107, 132, 22));
        elderlyAttendantID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        elderlyAttendantID.setToolTipText("Attendant ID");
        elderlyAttendantID.setBorder(null);
        elderlyAttendantID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                elderlyAttendantIDMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                elderlyAttendantIDMousePressed(evt);
            }
        });
        elderlyAttendantID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elderlyAttendantIDActionPerformed(evt);
            }
        });
        personalInfoBG.add(elderlyAttendantID, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 320, 210, 40));

        elderlyAdmitDateText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        elderlyAdmitDateText.setForeground(new java.awt.Color(107, 132, 22));
        elderlyAdmitDateText.setText("Admit Date*");
        elderlyAdmitDateText.setFocusable(false);
        personalInfoBG.add(elderlyAdmitDateText, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 110, 20));

        addElderlyButton.setBackground(new java.awt.Color(176, 212, 55));
        addElderlyButton.setFont(new java.awt.Font("Verdana Pro Black", 1, 18)); // NOI18N
        addElderlyButton.setForeground(new java.awt.Color(255, 255, 255));
        addElderlyButton.setText("ADD ELDERLY");
        addElderlyButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addElderlyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addElderlyButtonActionPerformed(evt);
            }
        });
        personalInfoBG.add(addElderlyButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 440, 220, 40));

        elderlyGender.setBackground(new java.awt.Color(231, 228, 228));
        elderlyGender.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        elderlyGender.setForeground(new java.awt.Color(107, 132, 22));
        elderlyGender.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        elderlyGender.setToolTipText("Gender");
        elderlyGender.setBorder(null);
        elderlyGender.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                elderlyGenderMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                elderlyGenderMousePressed(evt);
            }
        });
        elderlyGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elderlyGenderActionPerformed(evt);
            }
        });
        personalInfoBG.add(elderlyGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 60, 110, 40));

        elderlyGenderText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        elderlyGenderText.setForeground(new java.awt.Color(107, 132, 22));
        elderlyGenderText.setText("Gender*");
        elderlyGenderText.setFocusable(false);
        personalInfoBG.add(elderlyGenderText, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 40, 80, 20));

        elderlyRoomNoText1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        elderlyRoomNoText1.setForeground(new java.awt.Color(107, 132, 22));
        elderlyRoomNoText1.setText("Room Number*");
        elderlyRoomNoText1.setFocusable(false);
        personalInfoBG.add(elderlyRoomNoText1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 300, 110, 20));

        elderlyRoomNo.setBackground(new java.awt.Color(231, 228, 228));
        elderlyRoomNo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        elderlyRoomNo.setForeground(new java.awt.Color(107, 132, 22));
        elderlyRoomNo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        elderlyRoomNo.setToolTipText("Room Number");
        elderlyRoomNo.setBorder(null);
        elderlyRoomNo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                elderlyRoomNoMousePressed(evt);
            }
        });
        elderlyRoomNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                elderlyRoomNoKeyTyped(evt);
            }
        });
        personalInfoBG.add(elderlyRoomNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 320, 270, 40));

        backButton.setBackground(new java.awt.Color(176, 212, 55));
        backButton.setFont(new java.awt.Font("Verdana Pro Black", 1, 18)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("GO BACK");
        backButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        personalInfoBG.add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 440, 210, 40));

        getContentPane().add(personalInfoBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, 840, 500));

        elderlyBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/dashboardBackground.png"))); // NOI18N
        elderlyBackground.setText("jLabel1");
        elderlyBackground.setPreferredSize(new java.awt.Dimension(1020, 570));
        getContentPane().add(elderlyBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 620));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void minimizeWhiteLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeWhiteLogoMouseClicked
        this.setExtendedState(Login.ICONIFIED);
    }//GEN-LAST:event_minimizeWhiteLogoMouseClicked

    private void closeWhiteLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeWhiteLogoMouseClicked
        ExitDialog exDiag = new ExitDialog();
        exDiag.setVisible(true);
    }//GEN-LAST:event_closeWhiteLogoMouseClicked

    private void elderlyLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyLogoMouseClicked
         ElderlyDetails elderlyDetails = new ElderlyDetails();
         String database = "SELECT ElderlyID, FirstName, MiddleName, LastName, SuffixName, Gender, BirthDate, ContactNo, GuardianName, Street, Barangay, CityMunicipality, Province, AdmitDate, ElderlyRoomNo FROM elderly";
         
         try{
             Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
             PreparedStatement pst = con.prepareStatement(database);
             ResultSet rs = pst.executeQuery();
             DefaultTableModel table = (DefaultTableModel) elderlyDetails.getElderlyTable().getModel();
             table.setRowCount(0);
             
             while(rs.next()){
                 Object[] row = {
                     rs.getInt("ElderlyID"),
                     rs.getString("FirstName"),
                     rs.getString("MiddleName"),
                     rs.getString("LastName"),
                     rs.getString("SuffixName"),
                     rs.getString("Gender"),
                     rs.getObject("BirthDate"),
                     rs.getLong("ContactNo"),
                     rs.getString("GuardianName"),
                     rs.getString("Street"),
                     rs.getString("Barangay"),
                     rs.getString("CityMunicipality"),
                     rs.getString("Province"),
                     rs.getObject("AdmitDate"),
                     rs.getLong("ElderlyRoomNo")
                 };
                 table.addRow(row);
             }
             elderlyDetails.getElderlyTable().setModel(table);
             elderlyDetails.setVisible(true);
             this.setVisible(false);
             rs.close();
             pst.close();
             con.close();
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
         }
    }//GEN-LAST:event_elderlyLogoMouseClicked

    private void elderlyTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyTextMouseClicked
         ElderlyDetails elderlyDetails = new ElderlyDetails();
         String database = "SELECT ElderlyID, FirstName, MiddleName, LastName, SuffixName, Gender, BirthDate, ContactNo, GuardianName, Street, Barangay, CityMunicipality, Province, AdmitDate, ElderlyRoomNo FROM elderly";
         
         try{
             Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
             PreparedStatement pst = con.prepareStatement(database);
             ResultSet rs = pst.executeQuery();
             DefaultTableModel table = (DefaultTableModel) elderlyDetails.getElderlyTable().getModel();
             table.setRowCount(0);
             
             while(rs.next()){
                 Object[] row = {
                     rs.getInt("ElderlyID"),
                     rs.getString("FirstName"),
                     rs.getString("MiddleName"),
                     rs.getString("LastName"),
                     rs.getString("SuffixName"),
                     rs.getString("Gender"),
                     rs.getObject("BirthDate"),
                     rs.getLong("ContactNo"),
                     rs.getString("GuardianName"),
                     rs.getString("Street"),
                     rs.getString("Barangay"),
                     rs.getString("CityMunicipality"),
                     rs.getString("Province"),
                     rs.getObject("AdmitDate"),
                     rs.getLong("ElderlyRoomNo")
                 };
                 table.addRow(row);
             }
             elderlyDetails.getElderlyTable().setModel(table);
             elderlyDetails.setVisible(true);
             this.setVisible(false);
             rs.close();
             pst.close();
             con.close();
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
         }
    }//GEN-LAST:event_elderlyTextMouseClicked

    private void dashboardLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboardLogoMouseClicked
        Dashboard dashboard = new Dashboard();
        try{
            String database = "SELECT COUNT(*) AS visitorCount FROM visitor";
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            PreparedStatement pst = con.prepareStatement(database);
            ResultSet rs = pst.executeQuery();
            while(rs.next()){
                int count = rs.getInt("visitorCount");
                dashboard.visitorCounter.setText(String.valueOf(count));
            }
            
            dashboard.setVisible(true);
            this.setVisible(false);
            rs.close();
            pst.close();
            con.close();
        
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
        try{
            String database = "SELECT COUNT(*) AS elderlyCount FROM elderly";
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            PreparedStatement pst = con.prepareStatement(database);
            ResultSet rs = pst.executeQuery();
            while(rs.next()){
                int count = rs.getInt("elderlyCount");
                dashboard.elderlyCounter.setText(String.valueOf(count));
            }
            
            dashboard.setVisible(true);
            this.setVisible(false);
            rs.close();
            pst.close();
            con.close();
        
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
    }//GEN-LAST:event_dashboardLogoMouseClicked

    private void dashboardTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboardTextMouseClicked
        Dashboard dashboard = new Dashboard();
        try{
            String database = "SELECT COUNT(*) AS visitorCount FROM visitor";
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            PreparedStatement pst = con.prepareStatement(database);
            ResultSet rs = pst.executeQuery();
            while(rs.next()){
                int count = rs.getInt("visitorCount");
                dashboard.visitorCounter.setText(String.valueOf(count));
            }
            
            dashboard.setVisible(true);
            this.setVisible(false);
            rs.close();
            pst.close();
            con.close();
        
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
        try{
            String database = "SELECT COUNT(*) AS elderlyCount FROM elderly";
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            PreparedStatement pst = con.prepareStatement(database);
            ResultSet rs = pst.executeQuery();
            while(rs.next()){
                int count = rs.getInt("elderlyCount");
                dashboard.elderlyCounter.setText(String.valueOf(count));
            }
            
            dashboard.setVisible(true);
            this.setVisible(false);
            rs.close();
            pst.close();
            con.close();
        
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
    }//GEN-LAST:event_dashboardTextMouseClicked

    private void elderlyLastTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyLastTextFieldMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_elderlyLastTextFieldMouseClicked

    private void elderlyLastTextFieldMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyLastTextFieldMousePressed
        if(elderlyLastTextField.getText().equals("Last Name")){
            elderlyLastTextField.setText("");
            elderlyLastTextField.setFocusable(true);
        }
    }//GEN-LAST:event_elderlyLastTextFieldMousePressed

    private void elderlyLastTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elderlyLastTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_elderlyLastTextFieldActionPerformed

    private void elderlyFirstTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyFirstTextFieldMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_elderlyFirstTextFieldMouseClicked

    private void elderlyFirstTextFieldMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyFirstTextFieldMousePressed
        if(elderlyFirstTextField.getText().equals("First Name")){
            elderlyFirstTextField.setText("");
            elderlyFirstTextField.setFocusable(true);
        }
    }//GEN-LAST:event_elderlyFirstTextFieldMousePressed

    private void elderlyFirstTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elderlyFirstTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_elderlyFirstTextFieldActionPerformed

    private void elderlyMiddleTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyMiddleTextFieldMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_elderlyMiddleTextFieldMouseClicked

    private void elderlyMiddleTextFieldMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyMiddleTextFieldMousePressed
        if(elderlyMiddleTextField.getText().equals("Middle Name")){
            elderlyMiddleTextField.setText("");
            elderlyMiddleTextField.setFocusable(true);
        }
    }//GEN-LAST:event_elderlyMiddleTextFieldMousePressed

    private void elderlyMiddleTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elderlyMiddleTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_elderlyMiddleTextFieldActionPerformed

    private void elderlySuffixMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlySuffixMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_elderlySuffixMouseClicked

    private void elderlySuffixMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlySuffixMousePressed
        if(elderlySuffix.getText().equals("Suffix name")){
            elderlySuffix.setText("");
            elderlySuffix.setFocusable(true);
        }
    }//GEN-LAST:event_elderlySuffixMousePressed

    private void elderlySuffixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elderlySuffixActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_elderlySuffixActionPerformed

    private void elderlyContactMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyContactMouseClicked

    }//GEN-LAST:event_elderlyContactMouseClicked

    private void elderlyContactMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyContactMousePressed
        if(elderlyContact.getText().equals("Contact Number")){
            elderlyContact.setText("");
            elderlyContact.setFocusable(true);
        }
    }//GEN-LAST:event_elderlyContactMousePressed

    private void elderlyContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elderlyContactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_elderlyContactActionPerformed

    private void elderlyGuardianMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyGuardianMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_elderlyGuardianMouseClicked

    private void elderlyGuardianMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyGuardianMousePressed
        if(elderlyGuardian.getText().equals("Guardian Name")){
            elderlyGuardian.setText("");
            elderlyGuardian.setFocusable(true);
        }
    }//GEN-LAST:event_elderlyGuardianMousePressed

    private void elderlyGuardianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elderlyGuardianActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_elderlyGuardianActionPerformed

    private void elderlyStreetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyStreetMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_elderlyStreetMouseClicked

    private void elderlyStreetMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyStreetMousePressed
        if(elderlyStreet.getText().equals("Street")){
            elderlyStreet.setText("");
            elderlyStreet.setFocusable(true);
        }
    }//GEN-LAST:event_elderlyStreetMousePressed

    private void elderlyStreetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elderlyStreetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_elderlyStreetActionPerformed

    private void elderlyBrgyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyBrgyMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_elderlyBrgyMouseClicked

    private void elderlyBrgyMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyBrgyMousePressed
        if(elderlyBrgy.getText().equals("Barangay")){
            elderlyBrgy.setText("");
            elderlyBrgy.setFocusable(true);
        }
    }//GEN-LAST:event_elderlyBrgyMousePressed

    private void elderlyBrgyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elderlyBrgyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_elderlyBrgyActionPerformed

    private void elderlyCityMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyCityMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_elderlyCityMouseClicked

    private void elderlyCityMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyCityMousePressed
        if(elderlyCity.getText().equals("City")){
            elderlyCity.setText("");
            elderlyCity.setFocusable(true);
        }
    }//GEN-LAST:event_elderlyCityMousePressed

    private void elderlyCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elderlyCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_elderlyCityActionPerformed

    private void elderlyProvinceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyProvinceMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_elderlyProvinceMouseClicked

    private void elderlyProvinceMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyProvinceMousePressed
        if(elderlyProvince.getText().equals("Province")){
            elderlyProvince.setText("");
            elderlyProvince.setFocusable(true);
        }
    }//GEN-LAST:event_elderlyProvinceMousePressed

    private void elderlyProvinceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elderlyProvinceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_elderlyProvinceActionPerformed

    private void elderlyAttendantIDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyAttendantIDMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_elderlyAttendantIDMouseClicked

    private void elderlyAttendantIDMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyAttendantIDMousePressed
        if(elderlyAttendantID.getText().equals("Assign to AttendantID")){
            elderlyAttendantID.setText("");
            elderlyAttendantID.setFocusable(true);
        }
    }//GEN-LAST:event_elderlyAttendantIDMousePressed

    private void elderlyAttendantIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elderlyAttendantIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_elderlyAttendantIDActionPerformed

    private void addElderlyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addElderlyButtonActionPerformed
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            String sql = "INSERT INTO elderly(LastName, FirstName, MiddleName, SuffixName, Gender, BirthDate, ContactNo, GuardianName, Street, Barangay, CityMunicipality, Province, AdmitDate, ElderlyRoomNo, AttendantID) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            PreparedStatement pst = con.prepareStatement(sql);
            
            String lastName = elderlyLastTextField.getText();
            pst.setString(1, lastName);
            String firstName = elderlyFirstTextField.getText();
            pst.setString(2, firstName);
            String middleName = elderlyMiddleTextField.getText();
            pst.setString(3, middleName);
            String suffixName = elderlySuffix.getText();
            pst.setString(4, suffixName);
            String gender = elderlyGender.getText();
            pst.setString(5, gender);
            String guardian = elderlyGuardian.getText();
            pst.setString(8, guardian);
            String street = elderlyStreet.getText();
            pst.setString(9, street);
            String brgy = elderlyBrgy.getText();
            pst.setString(10, brgy);
            String city = elderlyCity.getText();
            pst.setString(11, city);
            String province = elderlyProvince.getText();
            pst.setString(12, province);
            int elderlyroomno = Integer.parseInt(elderlyRoomNo.getText());
            pst.setInt(14, elderlyroomno);
            int elderlyattendantid = Integer.parseInt(elderlyAttendantID.getText());
            pst.setInt(15, elderlyattendantid);

            //Date
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy/MM/dd");
            LocalDate birthDate = elderlyBirthdate.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            String formattedBirthDate = birthDate.format(formatter);
            pst.setString(6, formattedBirthDate);
            
            LocalDate admitDate = elderlyAdmitDate.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            String formattedAdmitDate = admitDate.format(formatter);
            pst.setString(13, formattedAdmitDate);

            //Contact Number
            String contactNo = elderlyContact.getText();
            
            if(contactNo.length() == 11){
                long ContactNo = Long.parseLong(contactNo);
                pst.setString(7, Long.toString(ContactNo));

            }
            else{
                JOptionPane.showMessageDialog(null, "Invalid Contact Number");
            }
            
            int result = pst.executeUpdate();
            
            if(result == 1){
                JOptionPane.showMessageDialog(this, "Elderly Added Successfully!");
                elderlyLastTextField.setText("");
                elderlyFirstTextField.setText("");
                elderlyMiddleTextField.setText("");
                elderlySuffix.setText("");
                elderlyGender.setText("");
                elderlyGuardian.setText("");
                elderlyStreet.setText("");
                elderlyBrgy.setText("");
                elderlyCity.setText("");
                elderlyProvince.setText("");
                elderlyRoomNo.setText("");
                elderlyContact.setText("");
                ElderlyDetails elderlyDetails = new ElderlyDetails();
                elderlyDetails.setVisible(true);
                this.setVisible(false);
                pst.close();
                con.close();
            }
            else{
                JOptionPane.showMessageDialog(this, "Record failed to add!");
            }
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
        
        ElderlyDetails elderlyDetails = new ElderlyDetails();
         String database = "SELECT ElderlyID, FirstName, MiddleName, LastName, SuffixName, Gender, BirthDate, ContactNo, GuardianName, Street, Barangay, CityMunicipality, Province, AdmitDate, ElderlyRoomNo FROM elderly";
         
         try{
             Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
             PreparedStatement pst = con.prepareStatement(database);
             ResultSet rs = pst.executeQuery();
             DefaultTableModel table = (DefaultTableModel) elderlyDetails.getElderlyTable().getModel();
             table.setRowCount(0);
             
             while(rs.next()){
                 Object[] row = {
                     rs.getInt("ElderlyID"),
                     rs.getString("FirstName"),
                     rs.getString("MiddleName"),
                     rs.getString("LastName"),
                     rs.getString("SuffixName"),
                     rs.getString("Gender"),
                     rs.getObject("BirthDate"),
                     rs.getLong("ContactNo"),
                     rs.getString("GuardianName"),
                     rs.getString("Street"),
                     rs.getString("Barangay"),
                     rs.getString("CityMunicipality"),
                     rs.getString("Province"),
                     rs.getObject("AdmitDate"),
                     rs.getLong("ElderlyRoomNo")
                 };
                 table.addRow(row);
             }
             elderlyDetails.getElderlyTable().setModel(table);
             elderlyDetails.setVisible(true);
             this.setVisible(false);
             rs.close();
             pst.close();
             con.close();
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
         }
    }//GEN-LAST:event_addElderlyButtonActionPerformed

    private void visitorLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorLogoMouseClicked
        VisitorDetails visitorDetails = new VisitorDetails();
        String database = "SELECT visitor.VisitorID, visitor.FirstName, visitor.MiddleName, visitor.LastName, visitor.SuffixName, visitor.Gender, visitor.BirthDate, visitor.Relationship, visitor.ContactNo, visitor.Email, visitor.Street, visitor.Barangay, visitor.CityMunicipality, visitor.Province FROM visitor";
        try{
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            PreparedStatement pst = con.prepareStatement(database);
            ResultSet rs = pst.executeQuery();
            DefaultTableModel table = (DefaultTableModel) visitorDetails.getVisitorTable().getModel();
            table.setRowCount(0);

            while(rs.next()){
                Object[] row = {
                    rs.getInt("visitor.VisitorID"),
                    rs.getString("visitor.FirstName"),
                    rs.getString("visitor.MiddleName"),
                    rs.getString("visitor.LastName"),
                    rs.getString("visitor.SuffixName"),
                    rs.getString("visitor.Gender"),
                    rs.getObject("visitor.BirthDate"),
                    rs.getString("visitor.Relationship"),
                    rs.getLong("visitor.ContactNo"),
                    rs.getString("visitor.Email"),
                    rs.getString("visitor.Street"),
                    rs.getString("visitor.Barangay"),
                    rs.getString("visitor.CityMunicipality"),
                    rs.getString("visitor.Province"),
                };
                table.addRow(row);
            }
            visitorDetails.getVisitorTable().setModel(table);
            visitorDetails.setVisible(true);
            this.setVisible(false);
            rs.close();
            pst.close();
            con.close();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
    }//GEN-LAST:event_visitorLogoMouseClicked

    private void visitorTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorTextMouseClicked
        VisitorDetails visitorDetails = new VisitorDetails();
        String database = "SELECT visitor.VisitorID, visitor.FirstName, visitor.MiddleName, visitor.LastName, visitor.SuffixName, visitor.Gender, visitor.BirthDate, visitor.Relationship, visitor.ContactNo, visitor.Email, visitor.Street, visitor.Barangay, visitor.CityMunicipality, visitor.Province FROM visitor";
        try{
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            PreparedStatement pst = con.prepareStatement(database);
            ResultSet rs = pst.executeQuery();
            DefaultTableModel table = (DefaultTableModel) visitorDetails.getVisitorTable().getModel();
            table.setRowCount(0);

            while(rs.next()){
                Object[] row = {
                    rs.getInt("visitor.VisitorID"),
                    rs.getString("visitor.FirstName"),
                    rs.getString("visitor.MiddleName"),
                    rs.getString("visitor.LastName"),
                    rs.getString("visitor.SuffixName"),
                    rs.getString("visitor.Gender"),
                    rs.getObject("visitor.BirthDate"),
                    rs.getString("visitor.Relationship"),
                    rs.getLong("visitor.ContactNo"),
                    rs.getString("visitor.Email"),
                    rs.getString("visitor.Street"),
                    rs.getString("visitor.Barangay"),
                    rs.getString("visitor.CityMunicipality"),
                    rs.getString("visitor.Province"),
                };
                table.addRow(row);
            }
            visitorDetails.getVisitorTable().setModel(table);
            visitorDetails.setVisible(true);
            this.setVisible(false);
            rs.close();
            pst.close();
            con.close();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
    }//GEN-LAST:event_visitorTextMouseClicked

    private void attendantLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendantLogoMouseClicked
         AttendantDetails attendantDetails = new AttendantDetails();
         String database = "SELECT attendant.AttendantID, attendant.FirstName, attendant.MiddleName, attendant.LastName, attendant.SuffixName, attendant.Gender, attendant.BirthDate, attendant.ContactNo FROM attendant";
         
         try{
             Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
             PreparedStatement pst = con.prepareStatement(database);
             ResultSet rs = pst.executeQuery();
             DefaultTableModel table = (DefaultTableModel) attendantDetails.getAttendantTable().getModel();
             table.setRowCount(0);
             
             while(rs.next()){
                 Object[] row = {
                     rs.getLong("attendant.AttendantID"),
                     rs.getString("attendant.FirstName"),
                     rs.getString("attendant.MiddleName"),
                     rs.getString("attendant.LastName"),
                     rs.getString("attendant.SuffixName"),
                     rs.getString("attendant.Gender"),
                     rs.getObject("attendant.BirthDate"),
                     rs.getLong("attendant.ContactNo"),
                 };
                 table.addRow(row);
             }
             attendantDetails.getAttendantTable().setModel(table);
             attendantDetails.setVisible(true);
             this.setVisible(false);
             rs.close();
             pst.close();
             con.close();
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
         }
    }//GEN-LAST:event_attendantLogoMouseClicked

    private void attendantTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendantTextMouseClicked
         AttendantDetails attendantDetails = new AttendantDetails();
         String database = "SELECT attendant.AttendantID, attendant.FirstName, attendant.MiddleName, attendant.LastName, attendant.SuffixName, attendant.Gender, attendant.BirthDate, attendant.ContactNo FROM attendant";
         
         try{
             Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
             PreparedStatement pst = con.prepareStatement(database);
             ResultSet rs = pst.executeQuery();
             DefaultTableModel table = (DefaultTableModel) attendantDetails.getAttendantTable().getModel();
             table.setRowCount(0);
             
             while(rs.next()){
                 Object[] row = {
                     rs.getLong("attendant.AttendantID"),
                     rs.getString("attendant.FirstName"),
                     rs.getString("attendant.MiddleName"),
                     rs.getString("attendant.LastName"),
                     rs.getString("attendant.SuffixName"),
                     rs.getString("attendant.Gender"),
                     rs.getObject("attendant.BirthDate"),
                     rs.getLong("attendant.ContactNo"),
                 };
                 table.addRow(row);
             }
             attendantDetails.getAttendantTable().setModel(table);
             attendantDetails.setVisible(true);
             this.setVisible(false);
             rs.close();
             pst.close();
             con.close();
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
         }
    }//GEN-LAST:event_attendantTextMouseClicked

    private void reportLogoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_reportLogoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_reportLogoKeyPressed

    private void reportLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportLogoMouseClicked
         ElderlyReport elderlyReport = new ElderlyReport();
         String database = "SELECT ElderlyID, FirstName, MiddleName, LastName, SuffixName, Gender, BirthDate, ContactNo, GuardianName, Street, Barangay, CityMunicipality, Province, AdmitDate, ElderlyRoomNo, AttendantID FROM elderly";
         
         try{
             Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
             PreparedStatement pst = con.prepareStatement(database);
             ResultSet rs = pst.executeQuery();
             DefaultTableModel table = (DefaultTableModel) elderlyReport.getElderlyTable().getModel();
             table.setRowCount(0);
             
             while(rs.next()){
                 Object[] row = {
                     rs.getLong("ElderlyID"),
                     rs.getString("FirstName"),
                     rs.getString("MiddleName"),
                     rs.getString("LastName"),
                     rs.getString("SuffixName"),
                     rs.getString("Gender"),
                     rs.getObject("BirthDate"),
                     rs.getLong("ContactNo"),
                     rs.getString("GuardianName"),
                     rs.getString("Street"),
                     rs.getString("Barangay"),
                     rs.getString("CityMunicipality"),
                     rs.getString("Province"),
                     rs.getObject("AdmitDate"),
                     rs.getLong("ElderlyRoomNo"),
                     rs.getLong("AttendantID")
                 };
                 table.addRow(row);
             }
             elderlyReport.getElderlyTable().setModel(table);
             elderlyReport.setVisible(true);
             this.setVisible(false);
             rs.close();
             pst.close();
             con.close();
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
         }
    }//GEN-LAST:event_reportLogoMouseClicked

    private void reportTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportTextMouseClicked
         ElderlyReport elderlyReport = new ElderlyReport();
         String database = "SELECT ElderlyID, FirstName, MiddleName, LastName, SuffixName, Gender, BirthDate, ContactNo, GuardianName, Street, Barangay, CityMunicipality, Province, AdmitDate, ElderlyRoomNo, AttendantID FROM elderly";
         
         try{
             Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
             PreparedStatement pst = con.prepareStatement(database);
             ResultSet rs = pst.executeQuery();
             DefaultTableModel table = (DefaultTableModel) elderlyReport.getElderlyTable().getModel();
             table.setRowCount(0);
             
             while(rs.next()){
                 Object[] row = {
                     rs.getLong("ElderlyID"),
                     rs.getString("FirstName"),
                     rs.getString("MiddleName"),
                     rs.getString("LastName"),
                     rs.getString("SuffixName"),
                     rs.getString("Gender"),
                     rs.getObject("BirthDate"),
                     rs.getLong("ContactNo"),
                     rs.getString("GuardianName"),
                     rs.getString("Street"),
                     rs.getString("Barangay"),
                     rs.getString("CityMunicipality"),
                     rs.getString("Province"),
                     rs.getObject("AdmitDate"),
                     rs.getLong("ElderlyRoomNo"),
                     rs.getLong("AttendantID")
                 };
                 table.addRow(row);
             }
             elderlyReport.getElderlyTable().setModel(table);
             elderlyReport.setVisible(true);
             this.setVisible(false);
             rs.close();
             pst.close();
             con.close();
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
         }
    }//GEN-LAST:event_reportTextMouseClicked

    private void elderlyGenderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyGenderMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_elderlyGenderMouseClicked

    private void elderlyGenderMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyGenderMousePressed
        if(elderlyGender.getText().equals("Gender")){
            elderlyGender.setText("");
            elderlyGender.setFocusable(true);
        }
    }//GEN-LAST:event_elderlyGenderMousePressed

    private void elderlyGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elderlyGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_elderlyGenderActionPerformed

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        elderlyLastTextField.setFocusable(true);
        elderlyFirstTextField.setFocusable(true);
        elderlyMiddleTextField.setFocusable(true);
        elderlySuffix.setFocusable(true);
        elderlyGender.setFocusable(true);
        elderlyBirthdate.setFocusable(true);
        elderlyContact.setFocusable(true);
        elderlyGuardian.setFocusable(true);
        elderlyStreet.setFocusable(true);
        elderlyBrgy.setFocusable(true);
        elderlyCity.setFocusable(true);
        elderlyProvince.setFocusable(true);
        elderlyAdmitDate.setFocusable(true);
        elderlyRoomNo.setFocusable(true);
        elderlyAttendantID.setFocusable(true);
    }//GEN-LAST:event_formMouseEntered

    private void elderlyBirthdateMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyBirthdateMousePressed

    }//GEN-LAST:event_elderlyBirthdateMousePressed

    private void elderlyRoomNoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyRoomNoMousePressed
        if(elderlyRoomNo.getText().equals("Room Number")){
            elderlyRoomNo.setText("");
            elderlyRoomNo.setFocusable(true);
        }
    }//GEN-LAST:event_elderlyRoomNoMousePressed

    private void elderlyContactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_elderlyContactKeyTyped
        char c = evt.getKeyChar();
        
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_elderlyContactKeyTyped

    private void elderlyRoomNoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_elderlyRoomNoKeyTyped
        char c = evt.getKeyChar();
        
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_elderlyRoomNoKeyTyped

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
         ElderlyDetails elderlyDetails = new ElderlyDetails();
         String database = "SELECT ElderlyID, FirstName, MiddleName, LastName, SuffixName, Gender, BirthDate, ContactNo, GuardianName, Street, Barangay, CityMunicipality, Province, AdmitDate, ElderlyRoomNo FROM elderly";
         
         try{
             Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
             PreparedStatement pst = con.prepareStatement(database);
             ResultSet rs = pst.executeQuery();
             DefaultTableModel table = (DefaultTableModel) elderlyDetails.getElderlyTable().getModel();
             table.setRowCount(0);
             
             while(rs.next()){
                 Object[] row = {
                     rs.getInt("ElderlyID"),
                     rs.getString("FirstName"),
                     rs.getString("MiddleName"),
                     rs.getString("LastName"),
                     rs.getString("SuffixName"),
                     rs.getString("Gender"),
                     rs.getObject("BirthDate"),
                     rs.getLong("ContactNo"),
                     rs.getString("GuardianName"),
                     rs.getString("Street"),
                     rs.getString("Barangay"),
                     rs.getString("CityMunicipality"),
                     rs.getString("Province"),
                     rs.getObject("AdmitDate"),
                     rs.getLong("ElderlyRoomNo")
                 };
                 table.addRow(row);
             }
             elderlyDetails.getElderlyTable().setModel(table);
             elderlyDetails.setVisible(true);
             this.setVisible(false);
             rs.close();
             pst.close();
             con.close();
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
         }
    }//GEN-LAST:event_backButtonActionPerformed

    private void adminLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminLogoMouseClicked
        ElderlyInformationLogOut logout = new ElderlyInformationLogOut();
        logout.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_adminLogoMouseClicked

    private void adminSettingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminSettingsMouseClicked
        ElderlyInformationLogOut logout = new ElderlyInformationLogOut();
        logout.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_adminSettingsMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ElderlyInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ElderlyInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ElderlyInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ElderlyInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ElderlyInformation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addElderlyButton;
    private javax.swing.JLabel adminLogo;
    private javax.swing.JLabel adminSettings;
    private javax.swing.JLabel attendantLogo;
    private javax.swing.JLabel attendantText;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel careFacilitytxt;
    private javax.swing.JLabel closeWhiteLogo;
    private javax.swing.JLabel dashboardLogo;
    private javax.swing.JPanel dashboardNavBG;
    private javax.swing.JPanel dashboardSideBarBG;
    private javax.swing.JLabel dashboardText;
    private javax.swing.JLabel elderlyAddressText;
    private com.toedter.calendar.JDateChooser elderlyAdmitDate;
    private javax.swing.JLabel elderlyAdmitDateText;
    private javax.swing.JTextField elderlyAttendantID;
    private javax.swing.JLabel elderlyAttendantIDText;
    private javax.swing.JLabel elderlyBackground;
    private com.toedter.calendar.JDateChooser elderlyBirthdate;
    private javax.swing.JLabel elderlyBirthdateText;
    private javax.swing.JTextField elderlyBrgy;
    private javax.swing.JLabel elderlyBrgyText;
    private javax.swing.JTextField elderlyCity;
    private javax.swing.JLabel elderlyCityText;
    private javax.swing.JTextField elderlyContact;
    private javax.swing.JLabel elderlyContactNoText;
    private javax.swing.JLabel elderlyFirstText;
    private javax.swing.JTextField elderlyFirstTextField;
    private javax.swing.JTextField elderlyGender;
    private javax.swing.JLabel elderlyGenderText;
    private javax.swing.JTextField elderlyGuardian;
    private javax.swing.JLabel elderlyGuardianText;
    private javax.swing.JLabel elderlyInformationText;
    private javax.swing.JLabel elderlyLastName;
    private javax.swing.JTextField elderlyLastTextField;
    private javax.swing.JLabel elderlyLogo;
    private javax.swing.JLabel elderlyMiddleText;
    private javax.swing.JTextField elderlyMiddleTextField;
    private javax.swing.JTextField elderlyProvince;
    private javax.swing.JLabel elderlyProvinceText;
    private javax.swing.JTextField elderlyRoomNo;
    private javax.swing.JLabel elderlyRoomNoText1;
    private javax.swing.JTextField elderlyStreet;
    private javax.swing.JLabel elderlyStreetText;
    private javax.swing.JTextField elderlySuffix;
    private javax.swing.JLabel elderlySuffixText;
    private javax.swing.JLabel elderlyText;
    private javax.swing.JLabel minimizeWhiteLogo;
    private javax.swing.JPanel personalInfoBG;
    private javax.swing.JLabel personalInfoText;
    private javax.swing.JLabel reportLogo;
    private javax.swing.JLabel reportText;
    private javax.swing.JLabel stJudetxt;
    private javax.swing.JLabel visitorLogo;
    private javax.swing.JLabel visitorText;
    // End of variables declaration//GEN-END:variables
}
