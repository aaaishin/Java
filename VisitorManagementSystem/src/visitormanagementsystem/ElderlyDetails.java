/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package visitormanagementsystem;

import java.awt.*;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author justi
 */
public class ElderlyDetails extends javax.swing.JFrame {

    /**
     * Creates new form Dashboard
     */
    
    ImageIcon logo = new ImageIcon("C:\\Users\\justi\\Desktop\\Programming\\Java\\VisitorManagementSystem\\src\\assets\\SJCF_LOGO.png");
    
    public ElderlyDetails() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        elderlyNavBG = new javax.swing.JPanel();
        stJudetxt = new javax.swing.JLabel();
        adminSettings = new javax.swing.JLabel();
        careFacilitytxt = new javax.swing.JLabel();
        adminLogo = new javax.swing.JLabel();
        minimizeWhiteLogo = new javax.swing.JLabel();
        closeWhiteLogo = new javax.swing.JLabel();
        elderlySideBarBG = new javax.swing.JPanel();
        reportText = new javax.swing.JLabel();
        reportLogo = new javax.swing.JLabel();
        visitorText = new javax.swing.JLabel();
        visitorLogo = new javax.swing.JLabel();
        elderlyText = new javax.swing.JLabel();
        elderlyLogo = new javax.swing.JLabel();
        dashboardText = new javax.swing.JLabel();
        dashboardLogo = new javax.swing.JLabel();
        attendantText = new javax.swing.JLabel();
        attendantLogo = new javax.swing.JLabel();
        elderlyBackground = new javax.swing.JPanel();
        elderlyDetailsText = new javax.swing.JLabel();
        deleteElderlyButton = new javax.swing.JButton();
        updateElderlyButton = new javax.swing.JButton();
        addElderlyButton = new javax.swing.JButton();
        elderlyScroll = new javax.swing.JScrollPane();
        elderlyTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("St. Jude Care Facility");
        setName("dashboardFrame"); // NOI18N
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        elderlyNavBG.setBackground(new java.awt.Color(129, 159, 29));
        elderlyNavBG.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        stJudetxt.setFont(new java.awt.Font("Segoe UI Black", 1, 36)); // NOI18N
        stJudetxt.setForeground(new java.awt.Color(255, 255, 255));
        stJudetxt.setText("St. Jude");
        stJudetxt.setFocusable(false);
        elderlyNavBG.add(stJudetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 160, 60));

        adminSettings.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        adminSettings.setForeground(new java.awt.Color(255, 255, 255));
        adminSettings.setText("ADMINISTRATOR");
        adminSettings.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        adminSettings.setFocusable(false);
        adminSettings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                adminSettingsMouseClicked(evt);
            }
        });
        elderlyNavBG.add(adminSettings, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 0, -1, 60));

        careFacilitytxt.setFont(new java.awt.Font("Segoe UI Light", 1, 36)); // NOI18N
        careFacilitytxt.setForeground(new java.awt.Color(255, 255, 255));
        careFacilitytxt.setText("Care Facility");
        careFacilitytxt.setFocusable(false);
        elderlyNavBG.add(careFacilitytxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 0, -1, 60));

        adminLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/adminLogo.png"))); // NOI18N
        adminLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        adminLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                adminLogoMouseClicked(evt);
            }
        });
        elderlyNavBG.add(adminLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 10, -1, -1));

        minimizeWhiteLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/minimizeWhiteLogo.png"))); // NOI18N
        minimizeWhiteLogo.setToolTipText("Minimize");
        minimizeWhiteLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimizeWhiteLogo.setFocusable(false);
        minimizeWhiteLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeWhiteLogoMouseClicked(evt);
            }
        });
        elderlyNavBG.add(minimizeWhiteLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(1350, 20, -1, -1));

        closeWhiteLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/closeWhiteLogo.png"))); // NOI18N
        closeWhiteLogo.setToolTipText("Close");
        closeWhiteLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        closeWhiteLogo.setFocusable(false);
        closeWhiteLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeWhiteLogoMouseClicked(evt);
            }
        });
        elderlyNavBG.add(closeWhiteLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(1390, 20, -1, -1));

        getContentPane().add(elderlyNavBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1430, 60));

        elderlySideBarBG.setBackground(new java.awt.Color(42, 52, 11));
        elderlySideBarBG.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        reportText.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        reportText.setForeground(new java.awt.Color(255, 255, 255));
        reportText.setText("REPORT");
        reportText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        reportText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reportTextMouseClicked(evt);
            }
        });
        elderlySideBarBG.add(reportText, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 520, -1, -1));

        reportLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/reportLogo.png"))); // NOI18N
        reportLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        reportLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reportLogoMouseClicked(evt);
            }
        });
        elderlySideBarBG.add(reportLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 450, -1, -1));

        visitorText.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        visitorText.setForeground(new java.awt.Color(255, 255, 255));
        visitorText.setText("VISITOR");
        visitorText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        visitorText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                visitorTextMouseClicked(evt);
            }
        });
        elderlySideBarBG.add(visitorText, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, -1, -1));

        visitorLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/visitorLogo.png"))); // NOI18N
        visitorLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        visitorLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                visitorLogoMouseClicked(evt);
            }
        });
        elderlySideBarBG.add(visitorLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, -1, -1));

        elderlyText.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        elderlyText.setForeground(new java.awt.Color(255, 255, 255));
        elderlyText.setText("ELDERLY");
        elderlyText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        elderlySideBarBG.add(elderlyText, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, -1, -1));

        elderlyLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/elderlyLogo.png"))); // NOI18N
        elderlyLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        elderlySideBarBG.add(elderlyLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, -1, -1));

        dashboardText.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        dashboardText.setForeground(new java.awt.Color(255, 255, 255));
        dashboardText.setText("DASHBOARD");
        dashboardText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dashboardText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashboardTextMouseClicked(evt);
            }
        });
        elderlySideBarBG.add(dashboardText, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        dashboardLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/dashboardLogo.png"))); // NOI18N
        dashboardLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dashboardLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashboardLogoMouseClicked(evt);
            }
        });
        elderlySideBarBG.add(dashboardLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, -1, -1));

        attendantText.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        attendantText.setForeground(new java.awt.Color(255, 255, 255));
        attendantText.setText("ATTENDANT");
        attendantText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        attendantText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attendantTextMouseClicked(evt);
            }
        });
        elderlySideBarBG.add(attendantText, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, -1, -1));

        attendantLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/attendantLogo.png"))); // NOI18N
        attendantLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        attendantLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attendantLogoMouseClicked(evt);
            }
        });
        elderlySideBarBG.add(attendantLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, -1, -1));

        getContentPane().add(elderlySideBarBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 160, 560));

        elderlyBackground.setBackground(new java.awt.Color(238, 238, 238));
        elderlyBackground.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        elderlyDetailsText.setFont(new java.awt.Font("Verdana Pro Black", 1, 28)); // NOI18N
        elderlyDetailsText.setForeground(new java.awt.Color(129, 159, 29));
        elderlyDetailsText.setText("ELDERLY DETAILS");
        elderlyDetailsText.setFocusable(false);
        elderlyBackground.add(elderlyDetailsText, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 70, 310, 30));

        deleteElderlyButton.setBackground(new java.awt.Color(129, 159, 29));
        deleteElderlyButton.setFont(new java.awt.Font("Verdana Pro Black", 1, 18)); // NOI18N
        deleteElderlyButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteElderlyButton.setText("- DELETE ELDERLY");
        deleteElderlyButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteElderlyButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteElderlyButtonMouseClicked(evt);
            }
        });
        deleteElderlyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteElderlyButtonActionPerformed(evt);
            }
        });
        elderlyBackground.add(deleteElderlyButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 70, 250, 40));

        updateElderlyButton.setBackground(new java.awt.Color(129, 159, 29));
        updateElderlyButton.setFont(new java.awt.Font("Verdana Pro Black", 1, 18)); // NOI18N
        updateElderlyButton.setForeground(new java.awt.Color(255, 255, 255));
        updateElderlyButton.setText("UPDATE ELDERLY");
        updateElderlyButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateElderlyButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateElderlyButtonMouseClicked(evt);
            }
        });
        updateElderlyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateElderlyButtonActionPerformed(evt);
            }
        });
        elderlyBackground.add(updateElderlyButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 70, 240, 40));

        addElderlyButton.setBackground(new java.awt.Color(129, 159, 29));
        addElderlyButton.setFont(new java.awt.Font("Verdana Pro Black", 1, 18)); // NOI18N
        addElderlyButton.setForeground(new java.awt.Color(255, 255, 255));
        addElderlyButton.setText("+ ADD ELDERLY");
        addElderlyButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addElderlyButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addElderlyButtonMouseClicked(evt);
            }
        });
        addElderlyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addElderlyButtonActionPerformed(evt);
            }
        });
        elderlyBackground.add(addElderlyButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 70, 220, 40));

        elderlyTable.setBackground(new java.awt.Color(231, 228, 228));
        elderlyTable.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(129, 159, 29), 1, true));
        elderlyTable.setForeground(new java.awt.Color(107, 132, 22));
        elderlyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ElderlyID", "FirstName", "MiddleName", "LastName", "SuffixName", "Gender", "BirthDate", "ContactNo", "GuardianName", "Street", "Barangay", "CityMunicipality", "Province", "AdmitDate", "ElderlyRoomNo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        elderlyTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        elderlyTable.setGridColor(new java.awt.Color(129, 159, 29));
        elderlyTable.setName("elderlyTable"); // NOI18N
        elderlyTable.setSelectionBackground(new java.awt.Color(183, 216, 72));
        elderlyTable.setSelectionForeground(new java.awt.Color(255, 255, 255));
        elderlyTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        elderlyTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        elderlyTable.setShowGrid(true);
        elderlyScroll.setViewportView(elderlyTable);

        elderlyBackground.add(elderlyScroll, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, 1250, 490));

        getContentPane().add(elderlyBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1430, 620));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void minimizeWhiteLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeWhiteLogoMouseClicked
        this.setExtendedState(Login.ICONIFIED);
    }//GEN-LAST:event_minimizeWhiteLogoMouseClicked

    private void closeWhiteLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeWhiteLogoMouseClicked
        ExitDialog exDiag = new ExitDialog();
        exDiag.setVisible(true);
    }//GEN-LAST:event_closeWhiteLogoMouseClicked

    private void addElderlyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addElderlyButtonActionPerformed
        this.setVisible(false);
        new ElderlyInformation().setVisible(true);
    }//GEN-LAST:event_addElderlyButtonActionPerformed

    private void dashboardLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboardLogoMouseClicked
        Dashboard dashboard = new Dashboard();
        try{
            String database = "SELECT COUNT(*) AS visitorCount FROM visitor";
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            PreparedStatement pst = con.prepareStatement(database);
            ResultSet rs = pst.executeQuery();
            while(rs.next()){
                int count = rs.getInt("visitorCount");
                dashboard.visitorCounter.setText(String.valueOf(count));
            }
            
            dashboard.setVisible(true);
            this.setVisible(false);
            rs.close();
            pst.close();
            con.close();
        
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
        try{
            String database = "SELECT COUNT(*) AS elderlyCount FROM elderly";
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            PreparedStatement pst = con.prepareStatement(database);
            ResultSet rs = pst.executeQuery();
            while(rs.next()){
                int count = rs.getInt("elderlyCount");
                dashboard.elderlyCounter.setText(String.valueOf(count));
            }
            
            dashboard.setVisible(true);
            this.setVisible(false);
            rs.close();
            pst.close();
            con.close();
        
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
    }//GEN-LAST:event_dashboardLogoMouseClicked

    private void dashboardTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboardTextMouseClicked
        Dashboard dashboard = new Dashboard();
        try{
            String database = "SELECT COUNT(*) AS visitorCount FROM visitor";
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            PreparedStatement pst = con.prepareStatement(database);
            ResultSet rs = pst.executeQuery();
            while(rs.next()){
                int count = rs.getInt("visitorCount");
                dashboard.visitorCounter.setText(String.valueOf(count));
            }
            
            dashboard.setVisible(true);
            this.setVisible(false);
            rs.close();
            pst.close();
            con.close();
        
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
        try{
            String database = "SELECT COUNT(*) AS elderlyCount FROM elderly";
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            PreparedStatement pst = con.prepareStatement(database);
            ResultSet rs = pst.executeQuery();
            while(rs.next()){
                int count = rs.getInt("elderlyCount");
                dashboard.elderlyCounter.setText(String.valueOf(count));
            }
            
            dashboard.setVisible(true);
            this.setVisible(false);
            rs.close();
            pst.close();
            con.close();
        
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
    }//GEN-LAST:event_dashboardTextMouseClicked

    private void visitorLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorLogoMouseClicked
        VisitorDetails visitorDetails = new VisitorDetails();
        String database = "SELECT visitor.VisitorID, visitor.FirstName, visitor.MiddleName, visitor.LastName, visitor.SuffixName, visitor.Gender, visitor.BirthDate, visitor.Relationship, visitor.ContactNo, visitor.Email, visitor.Street, visitor.Barangay, visitor.CityMunicipality, visitor.Province FROM visitor";
        try{
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            PreparedStatement pst = con.prepareStatement(database);
            ResultSet rs = pst.executeQuery();
            DefaultTableModel table = (DefaultTableModel) visitorDetails.getVisitorTable().getModel();
            table.setRowCount(0);

            while(rs.next()){
                Object[] row = {
                    rs.getInt("visitor.VisitorID"),
                    rs.getString("visitor.FirstName"),
                    rs.getString("visitor.MiddleName"),
                    rs.getString("visitor.LastName"),
                    rs.getString("visitor.SuffixName"),
                    rs.getString("visitor.Gender"),
                    rs.getObject("visitor.BirthDate"),
                    rs.getString("visitor.Relationship"),
                    rs.getLong("visitor.ContactNo"),
                    rs.getString("visitor.Email"),
                    rs.getString("visitor.Street"),
                    rs.getString("visitor.Barangay"),
                    rs.getString("visitor.CityMunicipality"),
                    rs.getString("visitor.Province"),
                };
                table.addRow(row);
            }
            visitorDetails.getVisitorTable().setModel(table);
            visitorDetails.setVisible(true);
            this.setVisible(false);
            rs.close();
            pst.close();
            con.close();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
    }//GEN-LAST:event_visitorLogoMouseClicked

    private void visitorTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorTextMouseClicked
        VisitorDetails visitorDetails = new VisitorDetails();
        String database = "SELECT visitor.VisitorID, visitor.FirstName, visitor.MiddleName, visitor.LastName, visitor.SuffixName, visitor.Gender, visitor.BirthDate, visitor.Relationship, visitor.ContactNo, visitor.Email, visitor.Street, visitor.Barangay, visitor.CityMunicipality, visitor.Province FROM visitor";
        try{
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            PreparedStatement pst = con.prepareStatement(database);
            ResultSet rs = pst.executeQuery();
            DefaultTableModel table = (DefaultTableModel) visitorDetails.getVisitorTable().getModel();
            table.setRowCount(0);

            while(rs.next()){
                Object[] row = {
                    rs.getInt("visitor.VisitorID"),
                    rs.getString("visitor.FirstName"),
                    rs.getString("visitor.MiddleName"),
                    rs.getString("visitor.LastName"),
                    rs.getString("visitor.SuffixName"),
                    rs.getString("visitor.Gender"),
                    rs.getObject("visitor.BirthDate"),
                    rs.getString("visitor.Relationship"),
                    rs.getLong("visitor.ContactNo"),
                    rs.getString("visitor.Email"),
                    rs.getString("visitor.Street"),
                    rs.getString("visitor.Barangay"),
                    rs.getString("visitor.CityMunicipality"),
                    rs.getString("visitor.Province"),
                };
                table.addRow(row);
            }
            visitorDetails.getVisitorTable().setModel(table);
            visitorDetails.setVisible(true);
            this.setVisible(false);
            rs.close();
            pst.close();
            con.close();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
    }//GEN-LAST:event_visitorTextMouseClicked

    private void addElderlyButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addElderlyButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_addElderlyButtonMouseClicked

    private void attendantLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendantLogoMouseClicked
         AttendantDetails attendantDetails = new AttendantDetails();
         String database = "SELECT attendant.AttendantID, attendant.FirstName, attendant.MiddleName, attendant.LastName, attendant.SuffixName, attendant.Gender, attendant.BirthDate, attendant.ContactNo FROM attendant";
         
         try{
             Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
             PreparedStatement pst = con.prepareStatement(database);
             ResultSet rs = pst.executeQuery();
             DefaultTableModel table = (DefaultTableModel) attendantDetails.getAttendantTable().getModel();
             table.setRowCount(0);
             
             while(rs.next()){
                 Object[] row = {
                     rs.getLong("attendant.AttendantID"),
                     rs.getString("attendant.FirstName"),
                     rs.getString("attendant.MiddleName"),
                     rs.getString("attendant.LastName"),
                     rs.getString("attendant.SuffixName"),
                     rs.getString("attendant.Gender"),
                     rs.getObject("attendant.BirthDate"),
                     rs.getLong("attendant.ContactNo"),
                 };
                 table.addRow(row);
             }
             attendantDetails.getAttendantTable().setModel(table);
             attendantDetails.setVisible(true);
             this.setVisible(false);
             rs.close();
             pst.close();
             con.close();
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
         }
    }//GEN-LAST:event_attendantLogoMouseClicked

    private void attendantTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendantTextMouseClicked
         AttendantDetails attendantDetails = new AttendantDetails();
         String database = "SELECT attendant.AttendantID, attendant.FirstName, attendant.MiddleName, attendant.LastName, attendant.SuffixName, attendant.Gender, attendant.BirthDate, attendant.ContactNo FROM attendant";
         
         try{
             Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
             PreparedStatement pst = con.prepareStatement(database);
             ResultSet rs = pst.executeQuery();
             DefaultTableModel table = (DefaultTableModel) attendantDetails.getAttendantTable().getModel();
             table.setRowCount(0);
             
             while(rs.next()){
                 Object[] row = {
                     rs.getLong("attendant.AttendantID"),
                     rs.getString("attendant.FirstName"),
                     rs.getString("attendant.MiddleName"),
                     rs.getString("attendant.LastName"),
                     rs.getString("attendant.SuffixName"),
                     rs.getString("attendant.Gender"),
                     rs.getObject("attendant.BirthDate"),
                     rs.getLong("attendant.ContactNo"),
                 };
                 table.addRow(row);
             }
             attendantDetails.getAttendantTable().setModel(table);
             attendantDetails.setVisible(true);
             this.setVisible(false);
             rs.close();
             pst.close();
             con.close();
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
         }
    }//GEN-LAST:event_attendantTextMouseClicked

    private void reportLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportLogoMouseClicked
         ElderlyReport elderlyReport = new ElderlyReport();
         String database = "SELECT ElderlyID, FirstName, MiddleName, LastName, SuffixName, Gender, BirthDate, ContactNo, GuardianName, Street, Barangay, CityMunicipality, Province, AdmitDate, ElderlyRoomNo, AttendantID FROM elderly";
         
         try{
             Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
             PreparedStatement pst = con.prepareStatement(database);
             ResultSet rs = pst.executeQuery();
             DefaultTableModel table = (DefaultTableModel) elderlyReport.getElderlyTable().getModel();
             table.setRowCount(0);
             
             while(rs.next()){
                 Object[] row = {
                     rs.getLong("ElderlyID"),
                     rs.getString("FirstName"),
                     rs.getString("MiddleName"),
                     rs.getString("LastName"),
                     rs.getString("SuffixName"),
                     rs.getString("Gender"),
                     rs.getObject("BirthDate"),
                     rs.getLong("ContactNo"),
                     rs.getString("GuardianName"),
                     rs.getString("Street"),
                     rs.getString("Barangay"),
                     rs.getString("CityMunicipality"),
                     rs.getString("Province"),
                     rs.getObject("AdmitDate"),
                     rs.getLong("ElderlyRoomNo"),
                     rs.getLong("AttendantID")
                 };
                 table.addRow(row);
             }
             elderlyReport.getElderlyTable().setModel(table);
             elderlyReport.setVisible(true);
             this.setVisible(false);
             rs.close();
             pst.close();
             con.close();
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
         }
    }//GEN-LAST:event_reportLogoMouseClicked

    private void reportTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportTextMouseClicked
         ElderlyReport elderlyReport = new ElderlyReport();
         String database = "SELECT ElderlyID, FirstName, MiddleName, LastName, SuffixName, Gender, BirthDate, ContactNo, GuardianName, Street, Barangay, CityMunicipality, Province, AdmitDate, ElderlyRoomNo, AttendantID FROM elderly";
         
         try{
             Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
             PreparedStatement pst = con.prepareStatement(database);
             ResultSet rs = pst.executeQuery();
             DefaultTableModel table = (DefaultTableModel) elderlyReport.getElderlyTable().getModel();
             table.setRowCount(0);
             
             while(rs.next()){
                 Object[] row = {
                     rs.getLong("ElderlyID"),
                     rs.getString("FirstName"),
                     rs.getString("MiddleName"),
                     rs.getString("LastName"),
                     rs.getString("SuffixName"),
                     rs.getString("Gender"),
                     rs.getObject("BirthDate"),
                     rs.getLong("ContactNo"),
                     rs.getString("GuardianName"),
                     rs.getString("Street"),
                     rs.getString("Barangay"),
                     rs.getString("CityMunicipality"),
                     rs.getString("Province"),
                     rs.getObject("AdmitDate"),
                     rs.getLong("ElderlyRoomNo"),
                     rs.getLong("AttendantID")
                 };
                 table.addRow(row);
             }
             elderlyReport.getElderlyTable().setModel(table);
             elderlyReport.setVisible(true);
             this.setVisible(false);
             rs.close();
             pst.close();
             con.close();
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
         }
    }//GEN-LAST:event_reportTextMouseClicked

    private void deleteElderlyButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteElderlyButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteElderlyButtonMouseClicked

    private void deleteElderlyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteElderlyButtonActionPerformed
         ElderlyDelete elderlyDelete = new ElderlyDelete();
         elderlyDelete.setVisible(true);
         this.setVisible(false);
    }//GEN-LAST:event_deleteElderlyButtonActionPerformed

    private void updateElderlyButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateElderlyButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_updateElderlyButtonMouseClicked

    private void updateElderlyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateElderlyButtonActionPerformed
         ElderlyUpdate elderlyUpdate = new ElderlyUpdate();
         elderlyUpdate.setVisible(true);this.setVisible(false);
         this.setVisible(false);
    }//GEN-LAST:event_updateElderlyButtonActionPerformed

    private void adminLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminLogoMouseClicked
        ElderlyDetailsLogOut logout = new ElderlyDetailsLogOut();
        logout.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_adminLogoMouseClicked

    private void adminSettingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminSettingsMouseClicked
        ElderlyDetailsLogOut logout = new ElderlyDetailsLogOut();
        logout.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_adminSettingsMouseClicked

    public JTable getElderlyTable(){
        return elderlyTable;
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ElderlyDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ElderlyDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ElderlyDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ElderlyDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ElderlyDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addElderlyButton;
    private javax.swing.JLabel adminLogo;
    private javax.swing.JLabel adminSettings;
    private javax.swing.JLabel attendantLogo;
    private javax.swing.JLabel attendantText;
    private javax.swing.JLabel careFacilitytxt;
    private javax.swing.JLabel closeWhiteLogo;
    private javax.swing.JLabel dashboardLogo;
    private javax.swing.JLabel dashboardText;
    private javax.swing.JButton deleteElderlyButton;
    private javax.swing.JPanel elderlyBackground;
    private javax.swing.JLabel elderlyDetailsText;
    private javax.swing.JLabel elderlyLogo;
    private javax.swing.JPanel elderlyNavBG;
    private javax.swing.JScrollPane elderlyScroll;
    private javax.swing.JPanel elderlySideBarBG;
    private javax.swing.JTable elderlyTable;
    private javax.swing.JLabel elderlyText;
    private javax.swing.JLabel minimizeWhiteLogo;
    private javax.swing.JLabel reportLogo;
    private javax.swing.JLabel reportText;
    private javax.swing.JLabel stJudetxt;
    private javax.swing.JButton updateElderlyButton;
    private javax.swing.JLabel visitorLogo;
    private javax.swing.JLabel visitorText;
    // End of variables declaration//GEN-END:variables
}
