/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package visitormanagementsystem;

import java.awt.*;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author justi
 */
public class VisitorInformation extends javax.swing.JFrame {

    /**
     * Creates new form Dashboard
     */
    
    ImageIcon logo = new ImageIcon("C:\\Users\\justi\\Desktop\\Programming\\Java\\VisitorManagementSystem\\src\\assets\\SJCF_LOGO.png");
    
    public VisitorInformation() {
        initComponents();
        setBackground(new Color(0,0,0,0));
        visitorLastTextField.setFocusable(false);
        visitorFirstTextField.setFocusable(false);
        visitorMiddleTextField.setFocusable(false);
        visitorSuffix.setFocusable(false);
        visitorGender.setFocusable(false);
        visitorContact.setFocusable(false);
        visitorEmail.setFocusable(false);
        visitorRelationship.setFocusable(false);
        visitorBrgy.setFocusable(false);
        visitorCity.setFocusable(false);
        visitorProvince.setFocusable(false);
        visitorRelationship.setFocusable(false);
        visitorVisitTime.setFocusable(false);
        visitorID.setFocusable(false);
        elderlyID.setFocusable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dashboardNavBG = new javax.swing.JPanel();
        stJudetxt = new javax.swing.JLabel();
        adminSettings = new javax.swing.JLabel();
        careFacilitytxt = new javax.swing.JLabel();
        adminLogo = new javax.swing.JLabel();
        minimizeWhiteLogo = new javax.swing.JLabel();
        closeWhiteLogo = new javax.swing.JLabel();
        dashboardSideBarBG = new javax.swing.JPanel();
        reportText = new javax.swing.JLabel();
        reportLogo = new javax.swing.JLabel();
        visitorText = new javax.swing.JLabel();
        visitorLogo = new javax.swing.JLabel();
        elderlyText = new javax.swing.JLabel();
        elderlyLogo = new javax.swing.JLabel();
        dashboardText = new javax.swing.JLabel();
        dashboardLogo = new javax.swing.JLabel();
        attendantLogo = new javax.swing.JLabel();
        attendantText = new javax.swing.JLabel();
        visitorInformationText = new javax.swing.JLabel();
        personalInfoBG = new javax.swing.JPanel();
        visitorLastTextField = new javax.swing.JTextField();
        visitorFirstTextField = new javax.swing.JTextField();
        visitorMiddleTextField = new javax.swing.JTextField();
        personalInfoText = new javax.swing.JLabel();
        visitorFirstText = new javax.swing.JLabel();
        visitorMiddleText = new javax.swing.JLabel();
        visitorLastName = new javax.swing.JLabel();
        visitorProvinceText = new javax.swing.JLabel();
        visitorBrgy = new javax.swing.JTextField();
        visitorStreetText = new javax.swing.JLabel();
        visitorCity = new javax.swing.JTextField();
        visitorBrgyText = new javax.swing.JLabel();
        visitorProvince = new javax.swing.JTextField();
        visitorCityText = new javax.swing.JLabel();
        visitorAddressText = new javax.swing.JLabel();
        visitorSuffix = new javax.swing.JTextField();
        visitorSuffixText = new javax.swing.JLabel();
        visitorGenderText = new javax.swing.JLabel();
        visitorGender = new javax.swing.JTextField();
        visitorBirthdateText = new javax.swing.JLabel();
        visitorBirthdate = new com.toedter.calendar.JDateChooser();
        visitorContactNoText = new javax.swing.JLabel();
        visitorContact = new javax.swing.JTextField();
        visitorEmailText = new javax.swing.JLabel();
        visitorEmail = new javax.swing.JTextField();
        visitorStreet = new javax.swing.JTextField();
        addVisitorButton = new javax.swing.JButton();
        visitorRelationshipText = new javax.swing.JLabel();
        visitorRelationship = new javax.swing.JTextField();
        personalVisitInfoBG = new javax.swing.JPanel();
        visitorVisitDate = new com.toedter.calendar.JDateChooser();
        elderlyID = new javax.swing.JTextField();
        visitorID = new javax.swing.JTextField();
        visitorVisitTime = new javax.swing.JTextField();
        addDateButton = new javax.swing.JButton();
        visitorAdmitTimeText = new javax.swing.JLabel();
        elderlyIDText = new javax.swing.JLabel();
        visitorIDText = new javax.swing.JLabel();
        visitorAdmitDateText = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        dateInfoText = new javax.swing.JLabel();
        visitorBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("St. Jude Care Facility");
        setIconImage(logo.getImage());
        setName("dashboardFrame"); // NOI18N
        setUndecorated(true);
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        dashboardNavBG.setBackground(new java.awt.Color(129, 159, 29));
        dashboardNavBG.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        stJudetxt.setFont(new java.awt.Font("Segoe UI Black", 1, 36)); // NOI18N
        stJudetxt.setForeground(new java.awt.Color(255, 255, 255));
        stJudetxt.setText("St. Jude");
        stJudetxt.setFocusable(false);
        dashboardNavBG.add(stJudetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 160, 60));

        adminSettings.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        adminSettings.setForeground(new java.awt.Color(255, 255, 255));
        adminSettings.setText("ADMINISTRATOR");
        adminSettings.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        adminSettings.setFocusable(false);
        adminSettings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                adminSettingsMouseClicked(evt);
            }
        });
        dashboardNavBG.add(adminSettings, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 0, -1, 60));

        careFacilitytxt.setFont(new java.awt.Font("Segoe UI Light", 1, 36)); // NOI18N
        careFacilitytxt.setForeground(new java.awt.Color(255, 255, 255));
        careFacilitytxt.setText("Care Facility");
        careFacilitytxt.setFocusable(false);
        dashboardNavBG.add(careFacilitytxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 0, -1, 60));

        adminLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/adminLogo.png"))); // NOI18N
        adminLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        adminLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                adminLogoMouseClicked(evt);
            }
        });
        dashboardNavBG.add(adminLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 10, -1, -1));

        minimizeWhiteLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/minimizeWhiteLogo.png"))); // NOI18N
        minimizeWhiteLogo.setToolTipText("Minimize");
        minimizeWhiteLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimizeWhiteLogo.setFocusable(false);
        minimizeWhiteLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeWhiteLogoMouseClicked(evt);
            }
        });
        dashboardNavBG.add(minimizeWhiteLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 20, -1, -1));

        closeWhiteLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/closeWhiteLogo.png"))); // NOI18N
        closeWhiteLogo.setToolTipText("Close");
        closeWhiteLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        closeWhiteLogo.setFocusable(false);
        closeWhiteLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeWhiteLogoMouseClicked(evt);
            }
        });
        dashboardNavBG.add(closeWhiteLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 20, -1, -1));

        getContentPane().add(dashboardNavBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1020, 60));

        dashboardSideBarBG.setBackground(new java.awt.Color(42, 52, 11));
        dashboardSideBarBG.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        reportText.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        reportText.setForeground(new java.awt.Color(255, 255, 255));
        reportText.setText("REPORT");
        reportText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        reportText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reportTextMouseClicked(evt);
            }
        });
        dashboardSideBarBG.add(reportText, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 520, -1, -1));

        reportLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/reportLogo.png"))); // NOI18N
        reportLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        reportLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reportLogoMouseClicked(evt);
            }
        });
        dashboardSideBarBG.add(reportLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 450, -1, -1));

        visitorText.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        visitorText.setForeground(new java.awt.Color(255, 255, 255));
        visitorText.setText("VISITOR");
        visitorText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        visitorText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                visitorTextMouseClicked(evt);
            }
        });
        visitorText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                visitorTextKeyPressed(evt);
            }
        });
        dashboardSideBarBG.add(visitorText, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, -1, -1));

        visitorLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/visitorLogo.png"))); // NOI18N
        visitorLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        visitorLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                visitorLogoMouseClicked(evt);
            }
        });
        dashboardSideBarBG.add(visitorLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, -1, -1));

        elderlyText.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        elderlyText.setForeground(new java.awt.Color(255, 255, 255));
        elderlyText.setText("ELDERLY");
        elderlyText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        elderlyText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                elderlyTextMouseClicked(evt);
            }
        });
        dashboardSideBarBG.add(elderlyText, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, -1, -1));

        elderlyLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/elderlyLogo.png"))); // NOI18N
        elderlyLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        elderlyLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                elderlyLogoMouseClicked(evt);
            }
        });
        elderlyLogo.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                elderlyLogoCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        dashboardSideBarBG.add(elderlyLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, -1, -1));

        dashboardText.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        dashboardText.setForeground(new java.awt.Color(255, 255, 255));
        dashboardText.setText("DASHBOARD");
        dashboardText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dashboardText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashboardTextMouseClicked(evt);
            }
        });
        dashboardSideBarBG.add(dashboardText, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        dashboardLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/dashboardLogo.png"))); // NOI18N
        dashboardLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dashboardLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashboardLogoMouseClicked(evt);
            }
        });
        dashboardSideBarBG.add(dashboardLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, -1, -1));

        attendantLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/attendantLogo.png"))); // NOI18N
        attendantLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        attendantLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attendantLogoMouseClicked(evt);
            }
        });
        dashboardSideBarBG.add(attendantLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, -1, -1));

        attendantText.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        attendantText.setForeground(new java.awt.Color(255, 255, 255));
        attendantText.setText("ATTENDANT");
        attendantText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        attendantText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attendantTextMouseClicked(evt);
            }
        });
        dashboardSideBarBG.add(attendantText, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, -1, -1));

        getContentPane().add(dashboardSideBarBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 160, 560));

        visitorInformationText.setFont(new java.awt.Font("Verdana Pro Black", 1, 24)); // NOI18N
        visitorInformationText.setForeground(new java.awt.Color(129, 159, 29));
        visitorInformationText.setText("VISITOR INFORMATION");
        visitorInformationText.setFocusable(false);
        getContentPane().add(visitorInformationText, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 70, 360, 30));

        personalInfoBG.setBackground(new java.awt.Color(255, 255, 255));
        personalInfoBG.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(129, 159, 29), 5, true));
        personalInfoBG.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        visitorLastTextField.setBackground(new java.awt.Color(231, 228, 228));
        visitorLastTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        visitorLastTextField.setForeground(new java.awt.Color(107, 132, 22));
        visitorLastTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        visitorLastTextField.setToolTipText("Last Name");
        visitorLastTextField.setBorder(null);
        visitorLastTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                visitorLastTextFieldMousePressed(evt);
            }
        });
        visitorLastTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visitorLastTextFieldActionPerformed(evt);
            }
        });
        personalInfoBG.add(visitorLastTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 180, 40));

        visitorFirstTextField.setBackground(new java.awt.Color(231, 228, 228));
        visitorFirstTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        visitorFirstTextField.setForeground(new java.awt.Color(107, 132, 22));
        visitorFirstTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        visitorFirstTextField.setToolTipText("First Name");
        visitorFirstTextField.setBorder(null);
        visitorFirstTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                visitorFirstTextFieldMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                visitorFirstTextFieldMousePressed(evt);
            }
        });
        visitorFirstTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visitorFirstTextFieldActionPerformed(evt);
            }
        });
        personalInfoBG.add(visitorFirstTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 60, 180, 40));

        visitorMiddleTextField.setBackground(new java.awt.Color(231, 228, 228));
        visitorMiddleTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        visitorMiddleTextField.setForeground(new java.awt.Color(107, 132, 22));
        visitorMiddleTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        visitorMiddleTextField.setToolTipText("Middle Name");
        visitorMiddleTextField.setBorder(null);
        visitorMiddleTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                visitorMiddleTextFieldMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                visitorMiddleTextFieldMousePressed(evt);
            }
        });
        visitorMiddleTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visitorMiddleTextFieldActionPerformed(evt);
            }
        });
        personalInfoBG.add(visitorMiddleTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 60, 190, 40));

        personalInfoText.setFont(new java.awt.Font("Verdana Pro Black", 1, 18)); // NOI18N
        personalInfoText.setForeground(new java.awt.Color(183, 216, 72));
        personalInfoText.setText("PERSONAL INFORMATION");
        personalInfoText.setFocusable(false);
        personalInfoBG.add(personalInfoText, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 300, 20));

        visitorFirstText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        visitorFirstText.setForeground(new java.awt.Color(107, 132, 22));
        visitorFirstText.setText("First Name*");
        visitorFirstText.setFocusable(false);
        personalInfoBG.add(visitorFirstText, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, 80, 20));

        visitorMiddleText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        visitorMiddleText.setForeground(new java.awt.Color(107, 132, 22));
        visitorMiddleText.setText("Middle Name");
        visitorMiddleText.setFocusable(false);
        personalInfoBG.add(visitorMiddleText, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, 80, 20));

        visitorLastName.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        visitorLastName.setForeground(new java.awt.Color(107, 132, 22));
        visitorLastName.setText("Last Name*");
        visitorLastName.setFocusable(false);
        personalInfoBG.add(visitorLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 80, 20));

        visitorProvinceText.setFont(new java.awt.Font("Verdana", 2, 12)); // NOI18N
        visitorProvinceText.setForeground(new java.awt.Color(107, 132, 22));
        visitorProvinceText.setText("Province*");
        visitorProvinceText.setFocusable(false);
        personalInfoBG.add(visitorProvinceText, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 230, 110, 20));

        visitorBrgy.setBackground(new java.awt.Color(231, 228, 228));
        visitorBrgy.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        visitorBrgy.setForeground(new java.awt.Color(107, 132, 22));
        visitorBrgy.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        visitorBrgy.setToolTipText("Barangay");
        visitorBrgy.setBorder(null);
        visitorBrgy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                visitorBrgyMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                visitorBrgyMousePressed(evt);
            }
        });
        visitorBrgy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visitorBrgyActionPerformed(evt);
            }
        });
        personalInfoBG.add(visitorBrgy, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 200, 230, 30));

        visitorStreetText.setFont(new java.awt.Font("Verdana", 2, 12)); // NOI18N
        visitorStreetText.setForeground(new java.awt.Color(107, 132, 22));
        visitorStreetText.setText("Street*");
        visitorStreetText.setFocusable(false);
        personalInfoBG.add(visitorStreetText, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 110, 20));

        visitorCity.setBackground(new java.awt.Color(231, 228, 228));
        visitorCity.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        visitorCity.setForeground(new java.awt.Color(107, 132, 22));
        visitorCity.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        visitorCity.setToolTipText("City");
        visitorCity.setBorder(null);
        visitorCity.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                visitorCityMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                visitorCityMousePressed(evt);
            }
        });
        visitorCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visitorCityActionPerformed(evt);
            }
        });
        personalInfoBG.add(visitorCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 200, 210, 30));

        visitorBrgyText.setFont(new java.awt.Font("Verdana", 2, 12)); // NOI18N
        visitorBrgyText.setForeground(new java.awt.Color(107, 132, 22));
        visitorBrgyText.setText("Barangay*");
        visitorBrgyText.setFocusable(false);
        personalInfoBG.add(visitorBrgyText, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 230, 110, 20));

        visitorProvince.setBackground(new java.awt.Color(231, 228, 228));
        visitorProvince.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        visitorProvince.setForeground(new java.awt.Color(107, 132, 22));
        visitorProvince.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        visitorProvince.setToolTipText("Province");
        visitorProvince.setBorder(null);
        visitorProvince.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                visitorProvinceMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                visitorProvinceMousePressed(evt);
            }
        });
        visitorProvince.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visitorProvinceActionPerformed(evt);
            }
        });
        personalInfoBG.add(visitorProvince, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 200, 130, 30));

        visitorCityText.setFont(new java.awt.Font("Verdana", 2, 12)); // NOI18N
        visitorCityText.setForeground(new java.awt.Color(107, 132, 22));
        visitorCityText.setText("City/Municipality*");
        visitorCityText.setFocusable(false);
        personalInfoBG.add(visitorCityText, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 230, 110, 20));

        visitorAddressText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        visitorAddressText.setForeground(new java.awt.Color(107, 132, 22));
        visitorAddressText.setText("Visitor's Address");
        visitorAddressText.setFocusable(false);
        personalInfoBG.add(visitorAddressText, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 110, 20));

        visitorSuffix.setBackground(new java.awt.Color(231, 228, 228));
        visitorSuffix.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        visitorSuffix.setForeground(new java.awt.Color(107, 132, 22));
        visitorSuffix.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        visitorSuffix.setToolTipText("Suffix Name");
        visitorSuffix.setBorder(null);
        visitorSuffix.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                visitorSuffixMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                visitorSuffixMousePressed(evt);
            }
        });
        visitorSuffix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visitorSuffixActionPerformed(evt);
            }
        });
        personalInfoBG.add(visitorSuffix, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 60, 80, 40));

        visitorSuffixText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        visitorSuffixText.setForeground(new java.awt.Color(107, 132, 22));
        visitorSuffixText.setText("Suffix Name");
        visitorSuffixText.setFocusable(false);
        personalInfoBG.add(visitorSuffixText, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 40, 80, 20));

        visitorGenderText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        visitorGenderText.setForeground(new java.awt.Color(107, 132, 22));
        visitorGenderText.setText("Gender*");
        visitorGenderText.setFocusable(false);
        personalInfoBG.add(visitorGenderText, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 40, 80, 20));

        visitorGender.setBackground(new java.awt.Color(231, 228, 228));
        visitorGender.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        visitorGender.setForeground(new java.awt.Color(107, 132, 22));
        visitorGender.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        visitorGender.setToolTipText("Gender");
        visitorGender.setBorder(null);
        visitorGender.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                visitorGenderMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                visitorGenderMousePressed(evt);
            }
        });
        visitorGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visitorGenderActionPerformed(evt);
            }
        });
        personalInfoBG.add(visitorGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 60, 110, 40));

        visitorBirthdateText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        visitorBirthdateText.setForeground(new java.awt.Color(107, 132, 22));
        visitorBirthdateText.setText("Birthdate*");
        visitorBirthdateText.setFocusable(false);
        personalInfoBG.add(visitorBirthdateText, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 80, 20));

        visitorBirthdate.setBackground(new java.awt.Color(231, 228, 228));
        visitorBirthdate.setForeground(new java.awt.Color(107, 132, 22));
        visitorBirthdate.setToolTipText("Birth Date");
        visitorBirthdate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        personalInfoBG.add(visitorBirthdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 240, 40));

        visitorContactNoText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        visitorContactNoText.setForeground(new java.awt.Color(107, 132, 22));
        visitorContactNoText.setText("Contact Number*");
        visitorContactNoText.setFocusable(false);
        personalInfoBG.add(visitorContactNoText, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 110, 110, 20));

        visitorContact.setBackground(new java.awt.Color(231, 228, 228));
        visitorContact.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        visitorContact.setForeground(new java.awt.Color(107, 132, 22));
        visitorContact.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        visitorContact.setToolTipText("Contact Number");
        visitorContact.setBorder(null);
        visitorContact.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                visitorContactMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                visitorContactMousePressed(evt);
            }
        });
        visitorContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visitorContactActionPerformed(evt);
            }
        });
        visitorContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                visitorContactKeyTyped(evt);
            }
        });
        personalInfoBG.add(visitorContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 130, 240, 40));

        visitorEmailText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        visitorEmailText.setForeground(new java.awt.Color(107, 132, 22));
        visitorEmailText.setText("Email Address*");
        visitorEmailText.setFocusable(false);
        personalInfoBG.add(visitorEmailText, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 110, 110, 20));

        visitorEmail.setBackground(new java.awt.Color(231, 228, 228));
        visitorEmail.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        visitorEmail.setForeground(new java.awt.Color(107, 132, 22));
        visitorEmail.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        visitorEmail.setToolTipText("Email Address");
        visitorEmail.setBorder(null);
        visitorEmail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                visitorEmailMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                visitorEmailMousePressed(evt);
            }
        });
        visitorEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visitorEmailActionPerformed(evt);
            }
        });
        personalInfoBG.add(visitorEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 130, 280, 40));

        visitorStreet.setBackground(new java.awt.Color(231, 228, 228));
        visitorStreet.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        visitorStreet.setForeground(new java.awt.Color(107, 132, 22));
        visitorStreet.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        visitorStreet.setToolTipText("Street");
        visitorStreet.setBorder(null);
        visitorStreet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                visitorStreetMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                visitorStreetMousePressed(evt);
            }
        });
        visitorStreet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visitorStreetActionPerformed(evt);
            }
        });
        personalInfoBG.add(visitorStreet, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 180, 30));

        addVisitorButton.setBackground(new java.awt.Color(176, 212, 55));
        addVisitorButton.setFont(new java.awt.Font("Verdana Pro Black", 1, 18)); // NOI18N
        addVisitorButton.setForeground(new java.awt.Color(255, 255, 255));
        addVisitorButton.setText("ADD VISITOR");
        addVisitorButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addVisitorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addVisitorButtonActionPerformed(evt);
            }
        });
        personalInfoBG.add(addVisitorButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 280, 210, 40));

        visitorRelationshipText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        visitorRelationshipText.setForeground(new java.awt.Color(107, 132, 22));
        visitorRelationshipText.setText("Relationship to Elderly*");
        visitorRelationshipText.setFocusable(false);
        personalInfoBG.add(visitorRelationshipText, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 140, 20));

        visitorRelationship.setBackground(new java.awt.Color(231, 228, 228));
        visitorRelationship.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        visitorRelationship.setForeground(new java.awt.Color(107, 132, 22));
        visitorRelationship.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        visitorRelationship.setToolTipText("Relationship");
        visitorRelationship.setBorder(null);
        visitorRelationship.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                visitorRelationshipMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                visitorRelationshipMousePressed(evt);
            }
        });
        visitorRelationship.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visitorRelationshipActionPerformed(evt);
            }
        });
        personalInfoBG.add(visitorRelationship, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 390, 40));

        getContentPane().add(personalInfoBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, 840, 340));

        personalVisitInfoBG.setBackground(new java.awt.Color(255, 255, 255));
        personalVisitInfoBG.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(129, 159, 29), 5, true));
        personalVisitInfoBG.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        visitorVisitDate.setBackground(new java.awt.Color(231, 228, 228));
        visitorVisitDate.setForeground(new java.awt.Color(107, 132, 22));
        visitorVisitDate.setToolTipText("Visit Date");
        visitorVisitDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        visitorVisitDate.setName("visitorVisitDate"); // NOI18N
        visitorVisitDate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                visitorVisitDateMousePressed(evt);
            }
        });
        personalVisitInfoBG.add(visitorVisitDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 60, 210, 40));

        elderlyID.setBackground(new java.awt.Color(231, 228, 228));
        elderlyID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        elderlyID.setForeground(new java.awt.Color(107, 132, 22));
        elderlyID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        elderlyID.setToolTipText("Elderly ID");
        elderlyID.setBorder(null);
        elderlyID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                elderlyIDMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                elderlyIDMousePressed(evt);
            }
        });
        elderlyID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elderlyIDActionPerformed(evt);
            }
        });
        elderlyID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                elderlyIDKeyTyped(evt);
            }
        });
        personalVisitInfoBG.add(elderlyID, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 60, 160, 40));

        visitorID.setBackground(new java.awt.Color(231, 228, 228));
        visitorID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        visitorID.setForeground(new java.awt.Color(107, 132, 22));
        visitorID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        visitorID.setToolTipText("Visitor ID");
        visitorID.setBorder(null);
        visitorID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                visitorIDMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                visitorIDMousePressed(evt);
            }
        });
        visitorID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visitorIDActionPerformed(evt);
            }
        });
        visitorID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                visitorIDKeyTyped(evt);
            }
        });
        personalVisitInfoBG.add(visitorID, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 160, 40));

        visitorVisitTime.setBackground(new java.awt.Color(231, 228, 228));
        visitorVisitTime.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        visitorVisitTime.setForeground(new java.awt.Color(107, 132, 22));
        visitorVisitTime.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        visitorVisitTime.setToolTipText("Visit Time");
        visitorVisitTime.setBorder(null);
        visitorVisitTime.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                visitorVisitTimeMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                visitorVisitTimeMousePressed(evt);
            }
        });
        visitorVisitTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visitorVisitTimeActionPerformed(evt);
            }
        });
        personalVisitInfoBG.add(visitorVisitTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 60, 210, 40));

        addDateButton.setBackground(new java.awt.Color(176, 212, 55));
        addDateButton.setFont(new java.awt.Font("Verdana Pro Black", 1, 18)); // NOI18N
        addDateButton.setForeground(new java.awt.Color(255, 255, 255));
        addDateButton.setText("ADD DATE");
        addDateButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addDateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDateButtonActionPerformed(evt);
            }
        });
        personalVisitInfoBG.add(addDateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 110, 210, 40));

        visitorAdmitTimeText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        visitorAdmitTimeText.setForeground(new java.awt.Color(107, 132, 22));
        visitorAdmitTimeText.setText("Visit Time*");
        visitorAdmitTimeText.setFocusable(false);
        personalVisitInfoBG.add(visitorAdmitTimeText, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 40, 110, 20));

        elderlyIDText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        elderlyIDText.setForeground(new java.awt.Color(107, 132, 22));
        elderlyIDText.setText("ElderlyID to Visit*");
        elderlyIDText.setFocusable(false);
        personalVisitInfoBG.add(elderlyIDText, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, 130, 20));

        visitorIDText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        visitorIDText.setForeground(new java.awt.Color(107, 132, 22));
        visitorIDText.setText("Assign to VisitorID*");
        visitorIDText.setFocusable(false);
        personalVisitInfoBG.add(visitorIDText, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 130, 20));

        visitorAdmitDateText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        visitorAdmitDateText.setForeground(new java.awt.Color(107, 132, 22));
        visitorAdmitDateText.setText("Visit Date*");
        visitorAdmitDateText.setFocusable(false);
        personalVisitInfoBG.add(visitorAdmitDateText, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 40, 110, 20));

        backButton.setBackground(new java.awt.Color(176, 212, 55));
        backButton.setFont(new java.awt.Font("Verdana Pro Black", 1, 18)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("GO BACK");
        backButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        personalVisitInfoBG.add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 110, 210, 40));

        dateInfoText.setFont(new java.awt.Font("Verdana Pro Black", 1, 18)); // NOI18N
        dateInfoText.setForeground(new java.awt.Color(183, 216, 72));
        dateInfoText.setText("DATE OF VISIT");
        dateInfoText.setFocusable(false);
        personalVisitInfoBG.add(dateInfoText, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 10, 170, 20));

        getContentPane().add(personalVisitInfoBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 440, 840, 170));

        visitorBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/dashboardBackground.png"))); // NOI18N
        visitorBackground.setText("jLabel1");
        visitorBackground.setPreferredSize(new java.awt.Dimension(1020, 570));
        getContentPane().add(visitorBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 620));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void minimizeWhiteLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeWhiteLogoMouseClicked
        this.setExtendedState(Login.ICONIFIED);
    }//GEN-LAST:event_minimizeWhiteLogoMouseClicked

    private void closeWhiteLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeWhiteLogoMouseClicked
        ExitDialog exDiag = new ExitDialog();
        exDiag.setVisible(true);
    }//GEN-LAST:event_closeWhiteLogoMouseClicked

    private void elderlyLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyLogoMouseClicked
         ElderlyDetails elderlyDetails = new ElderlyDetails();
         String database = "SELECT ElderlyID, FirstName, MiddleName, LastName, SuffixName, Gender, BirthDate, ContactNo, GuardianName, Street, Barangay, CityMunicipality, Province, AdmitDate, ElderlyRoomNo FROM elderly";
         
         try{
             Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
             PreparedStatement pst = con.prepareStatement(database);
             ResultSet rs = pst.executeQuery();
             DefaultTableModel table = (DefaultTableModel) elderlyDetails.getElderlyTable().getModel();
             table.setRowCount(0);
             
             while(rs.next()){
                 Object[] row = {
                     rs.getInt("ElderlyID"),
                     rs.getString("FirstName"),
                     rs.getString("MiddleName"),
                     rs.getString("LastName"),
                     rs.getString("SuffixName"),
                     rs.getString("Gender"),
                     rs.getObject("BirthDate"),
                     rs.getLong("ContactNo"),
                     rs.getString("GuardianName"),
                     rs.getString("Street"),
                     rs.getString("Barangay"),
                     rs.getString("CityMunicipality"),
                     rs.getString("Province"),
                     rs.getObject("AdmitDate"),
                     rs.getLong("ElderlyRoomNo")
                 };
                 table.addRow(row);
             }
             elderlyDetails.getElderlyTable().setModel(table);
             elderlyDetails.setVisible(true);
             this.setVisible(false);
             rs.close();
             pst.close();
             con.close();
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
         }
    }//GEN-LAST:event_elderlyLogoMouseClicked

    private void elderlyTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyTextMouseClicked
         ElderlyDetails elderlyDetails = new ElderlyDetails();
         String database = "SELECT ElderlyID, FirstName, MiddleName, LastName, SuffixName, Gender, BirthDate, ContactNo, GuardianName, Street, Barangay, CityMunicipality, Province, AdmitDate, ElderlyRoomNo FROM elderly";
         
         try{
             Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
             PreparedStatement pst = con.prepareStatement(database);
             ResultSet rs = pst.executeQuery();
             DefaultTableModel table = (DefaultTableModel) elderlyDetails.getElderlyTable().getModel();
             table.setRowCount(0);
             
             while(rs.next()){
                 Object[] row = {
                     rs.getInt("ElderlyID"),
                     rs.getString("FirstName"),
                     rs.getString("MiddleName"),
                     rs.getString("LastName"),
                     rs.getString("SuffixName"),
                     rs.getString("Gender"),
                     rs.getObject("BirthDate"),
                     rs.getLong("ContactNo"),
                     rs.getString("GuardianName"),
                     rs.getString("Street"),
                     rs.getString("Barangay"),
                     rs.getString("CityMunicipality"),
                     rs.getString("Province"),
                     rs.getObject("AdmitDate"),
                     rs.getLong("ElderlyRoomNo")
                 };
                 table.addRow(row);
             }
             elderlyDetails.getElderlyTable().setModel(table);
             elderlyDetails.setVisible(true);
             this.setVisible(false);
             rs.close();
             pst.close();
             con.close();
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
         }
    }//GEN-LAST:event_elderlyTextMouseClicked

    private void dashboardLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboardLogoMouseClicked
        Dashboard dashboard = new Dashboard();
        try{
            String database = "SELECT COUNT(*) AS visitorCount FROM visitor";
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            PreparedStatement pst = con.prepareStatement(database);
            ResultSet rs = pst.executeQuery();
            while(rs.next()){
                int count = rs.getInt("visitorCount");
                dashboard.visitorCounter.setText(String.valueOf(count));
            }
            
            dashboard.setVisible(true);
            this.setVisible(false);
            rs.close();
            pst.close();
            con.close();
        
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
        try{
            String database = "SELECT COUNT(*) AS elderlyCount FROM elderly";
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            PreparedStatement pst = con.prepareStatement(database);
            ResultSet rs = pst.executeQuery();
            while(rs.next()){
                int count = rs.getInt("elderlyCount");
                dashboard.elderlyCounter.setText(String.valueOf(count));
            }
            
            dashboard.setVisible(true);
            this.setVisible(false);
            rs.close();
            pst.close();
            con.close();
        
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
    }//GEN-LAST:event_dashboardLogoMouseClicked

    private void dashboardTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboardTextMouseClicked
        Dashboard dashboard = new Dashboard();
        try{
            String database = "SELECT COUNT(*) AS visitorCount FROM visitor";
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            PreparedStatement pst = con.prepareStatement(database);
            ResultSet rs = pst.executeQuery();
            while(rs.next()){
                int count = rs.getInt("visitorCount");
                dashboard.visitorCounter.setText(String.valueOf(count));
            }
            
            dashboard.setVisible(true);
            this.setVisible(false);
            rs.close();
            pst.close();
            con.close();
        
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
        try{
            String database = "SELECT COUNT(*) AS elderlyCount FROM elderly";
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            PreparedStatement pst = con.prepareStatement(database);
            ResultSet rs = pst.executeQuery();
            while(rs.next()){
                int count = rs.getInt("elderlyCount");
                dashboard.elderlyCounter.setText(String.valueOf(count));
            }
            
            dashboard.setVisible(true);
            this.setVisible(false);
            rs.close();
            pst.close();
            con.close();
        
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
    }//GEN-LAST:event_dashboardTextMouseClicked

    private void visitorLastTextFieldMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorLastTextFieldMousePressed
        if(visitorLastTextField.getText().equals("Last Name")){
            visitorLastTextField.setText("");
            visitorLastTextField.setFocusable(true);
        }
    }//GEN-LAST:event_visitorLastTextFieldMousePressed

    private void visitorLastTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visitorLastTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_visitorLastTextFieldActionPerformed

    private void visitorFirstTextFieldMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorFirstTextFieldMousePressed
        if(visitorFirstTextField.getText().equals("First Name")){
            visitorFirstTextField.setText("");
            visitorFirstTextField.setFocusable(true);
        }
    }//GEN-LAST:event_visitorFirstTextFieldMousePressed

    private void visitorFirstTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visitorFirstTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_visitorFirstTextFieldActionPerformed

    private void visitorMiddleTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorMiddleTextFieldMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_visitorMiddleTextFieldMouseClicked

    private void visitorMiddleTextFieldMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorMiddleTextFieldMousePressed
        if(visitorMiddleTextField.getText().equals("Middle Name")){
            visitorMiddleTextField.setText("");
            visitorMiddleTextField.setFocusable(true);
        }
    }//GEN-LAST:event_visitorMiddleTextFieldMousePressed

    private void visitorMiddleTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visitorMiddleTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_visitorMiddleTextFieldActionPerformed

    private void visitorBrgyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorBrgyMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_visitorBrgyMouseClicked

    private void visitorBrgyMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorBrgyMousePressed
        if(visitorBrgy.getText().equals("Barangay")){
            visitorBrgy.setText("");
            visitorBrgy.setFocusable(true);
        }
    }//GEN-LAST:event_visitorBrgyMousePressed

    private void visitorBrgyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visitorBrgyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_visitorBrgyActionPerformed

    private void visitorCityMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorCityMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_visitorCityMouseClicked

    private void visitorCityMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorCityMousePressed
        if(visitorCity.getText().equals("City")){
            visitorCity.setText("");
            visitorCity.setFocusable(true);
        }
    }//GEN-LAST:event_visitorCityMousePressed

    private void visitorCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visitorCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_visitorCityActionPerformed

    private void visitorProvinceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorProvinceMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_visitorProvinceMouseClicked

    private void visitorProvinceMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorProvinceMousePressed
        if(visitorProvince.getText().equals("Province")){
            visitorProvince.setText("");
            visitorProvince.setFocusable(true);
        }
    }//GEN-LAST:event_visitorProvinceMousePressed

    private void visitorProvinceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visitorProvinceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_visitorProvinceActionPerformed

    private void elderlyLogoCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_elderlyLogoCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_elderlyLogoCaretPositionChanged

    private void visitorLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorLogoMouseClicked
        VisitorDetails visitorDetails = new VisitorDetails();
        String database = "SELECT visitor.VisitorID, visitor.FirstName, visitor.MiddleName, visitor.LastName, visitor.SuffixName, visitor.Gender, visitor.BirthDate, visitor.Relationship, visitor.ContactNo, visitor.Email, visitor.Street, visitor.Barangay, visitor.CityMunicipality, visitor.Province FROM visitor";
        try{
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            PreparedStatement pst = con.prepareStatement(database);
            ResultSet rs = pst.executeQuery();
            DefaultTableModel table = (DefaultTableModel) visitorDetails.getVisitorTable().getModel();
            table.setRowCount(0);

            while(rs.next()){
                Object[] row = {
                    rs.getInt("visitor.VisitorID"),
                    rs.getString("visitor.FirstName"),
                    rs.getString("visitor.MiddleName"),
                    rs.getString("visitor.LastName"),
                    rs.getString("visitor.SuffixName"),
                    rs.getString("visitor.Gender"),
                    rs.getObject("visitor.BirthDate"),
                    rs.getString("visitor.Relationship"),
                    rs.getLong("visitor.ContactNo"),
                    rs.getString("visitor.Email"),
                    rs.getString("visitor.Street"),
                    rs.getString("visitor.Barangay"),
                    rs.getString("visitor.CityMunicipality"),
                    rs.getString("visitor.Province"),
                };
                table.addRow(row);
            }
            visitorDetails.getVisitorTable().setModel(table);
            visitorDetails.setVisible(true);
            this.setVisible(false);
            rs.close();
            pst.close();
            con.close();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
    }//GEN-LAST:event_visitorLogoMouseClicked

    private void visitorTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_visitorTextKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_visitorTextKeyPressed

    private void visitorTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorTextMouseClicked
        VisitorDetails visitorDetails = new VisitorDetails();
        String database = "SELECT visitor.VisitorID, visitor.FirstName, visitor.MiddleName, visitor.LastName, visitor.SuffixName, visitor.Gender, visitor.BirthDate, visitor.Relationship, visitor.ContactNo, visitor.Email, visitor.Street, visitor.Barangay, visitor.CityMunicipality, visitor.Province FROM visitor";
        try{
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            PreparedStatement pst = con.prepareStatement(database);
            ResultSet rs = pst.executeQuery();
            DefaultTableModel table = (DefaultTableModel) visitorDetails.getVisitorTable().getModel();
            table.setRowCount(0);

            while(rs.next()){
                Object[] row = {
                    rs.getInt("visitor.VisitorID"),
                    rs.getString("visitor.FirstName"),
                    rs.getString("visitor.MiddleName"),
                    rs.getString("visitor.LastName"),
                    rs.getString("visitor.SuffixName"),
                    rs.getString("visitor.Gender"),
                    rs.getObject("visitor.BirthDate"),
                    rs.getString("visitor.Relationship"),
                    rs.getLong("visitor.ContactNo"),
                    rs.getString("visitor.Email"),
                    rs.getString("visitor.Street"),
                    rs.getString("visitor.Barangay"),
                    rs.getString("visitor.CityMunicipality"),
                    rs.getString("visitor.Province"),
                };
                table.addRow(row);
            }
            visitorDetails.getVisitorTable().setModel(table);
            visitorDetails.setVisible(true);
            this.setVisible(false);
            rs.close();
            pst.close();
            con.close();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
    }//GEN-LAST:event_visitorTextMouseClicked

    private void attendantLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendantLogoMouseClicked
         AttendantDetails attendantDetails = new AttendantDetails();
         String database = "SELECT attendant.AttendantID, attendant.FirstName, attendant.MiddleName, attendant.LastName, attendant.SuffixName, attendant.Gender, attendant.BirthDate, attendant.ContactNo FROM attendant";
         
         try{
             Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
             PreparedStatement pst = con.prepareStatement(database);
             ResultSet rs = pst.executeQuery();
             DefaultTableModel table = (DefaultTableModel) attendantDetails.getAttendantTable().getModel();
             table.setRowCount(0);
             
             while(rs.next()){
                 Object[] row = {
                     rs.getLong("attendant.AttendantID"),
                     rs.getString("attendant.FirstName"),
                     rs.getString("attendant.MiddleName"),
                     rs.getString("attendant.LastName"),
                     rs.getString("attendant.SuffixName"),
                     rs.getString("attendant.Gender"),
                     rs.getObject("attendant.BirthDate"),
                     rs.getLong("attendant.ContactNo"),
                 };
                 table.addRow(row);
             }
             attendantDetails.getAttendantTable().setModel(table);
             attendantDetails.setVisible(true);
             this.setVisible(false);
             rs.close();
             pst.close();
             con.close();
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
         }
    }//GEN-LAST:event_attendantLogoMouseClicked

    private void attendantTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendantTextMouseClicked
         AttendantDetails attendantDetails = new AttendantDetails();
         String database = "SELECT attendant.AttendantID, attendant.FirstName, attendant.MiddleName, attendant.LastName, attendant.SuffixName, attendant.Gender, attendant.BirthDate, attendant.ContactNo FROM attendant";
         
         try{
             Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
             PreparedStatement pst = con.prepareStatement(database);
             ResultSet rs = pst.executeQuery();
             DefaultTableModel table = (DefaultTableModel) attendantDetails.getAttendantTable().getModel();
             table.setRowCount(0);
             
             while(rs.next()){
                 Object[] row = {
                     rs.getLong("attendant.AttendantID"),
                     rs.getString("attendant.FirstName"),
                     rs.getString("attendant.MiddleName"),
                     rs.getString("attendant.LastName"),
                     rs.getString("attendant.SuffixName"),
                     rs.getString("attendant.Gender"),
                     rs.getObject("attendant.BirthDate"),
                     rs.getLong("attendant.ContactNo"),
                 };
                 table.addRow(row);
             }
             attendantDetails.getAttendantTable().setModel(table);
             attendantDetails.setVisible(true);
             this.setVisible(false);
             rs.close();
             pst.close();
             con.close();
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
         }
    }//GEN-LAST:event_attendantTextMouseClicked

    private void reportLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportLogoMouseClicked
         ElderlyReport elderlyReport = new ElderlyReport();
         String database = "SELECT ElderlyID, FirstName, MiddleName, LastName, SuffixName, Gender, BirthDate, ContactNo, GuardianName, Street, Barangay, CityMunicipality, Province, AdmitDate, ElderlyRoomNo, AttendantID FROM elderly";
         
         try{
             Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
             PreparedStatement pst = con.prepareStatement(database);
             ResultSet rs = pst.executeQuery();
             DefaultTableModel table = (DefaultTableModel) elderlyReport.getElderlyTable().getModel();
             table.setRowCount(0);
             
             while(rs.next()){
                 Object[] row = {
                     rs.getLong("ElderlyID"),
                     rs.getString("FirstName"),
                     rs.getString("MiddleName"),
                     rs.getString("LastName"),
                     rs.getString("SuffixName"),
                     rs.getString("Gender"),
                     rs.getObject("BirthDate"),
                     rs.getLong("ContactNo"),
                     rs.getString("GuardianName"),
                     rs.getString("Street"),
                     rs.getString("Barangay"),
                     rs.getString("CityMunicipality"),
                     rs.getString("Province"),
                     rs.getObject("AdmitDate"),
                     rs.getLong("ElderlyRoomNo"),
                     rs.getLong("AttendantID")
                 };
                 table.addRow(row);
             }
             elderlyReport.getElderlyTable().setModel(table);
             elderlyReport.setVisible(true);
             this.setVisible(false);
             rs.close();
             pst.close();
             con.close();
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
         }
    }//GEN-LAST:event_reportLogoMouseClicked

    private void reportTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportTextMouseClicked
         ElderlyReport elderlyReport = new ElderlyReport();
         String database = "SELECT ElderlyID, FirstName, MiddleName, LastName, SuffixName, Gender, BirthDate, ContactNo, GuardianName, Street, Barangay, CityMunicipality, Province, AdmitDate, ElderlyRoomNo, AttendantID FROM elderly";
         
         try{
             Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
             PreparedStatement pst = con.prepareStatement(database);
             ResultSet rs = pst.executeQuery();
             DefaultTableModel table = (DefaultTableModel) elderlyReport.getElderlyTable().getModel();
             table.setRowCount(0);
             
             while(rs.next()){
                 Object[] row = {
                     rs.getLong("ElderlyID"),
                     rs.getString("FirstName"),
                     rs.getString("MiddleName"),
                     rs.getString("LastName"),
                     rs.getString("SuffixName"),
                     rs.getString("Gender"),
                     rs.getObject("BirthDate"),
                     rs.getLong("ContactNo"),
                     rs.getString("GuardianName"),
                     rs.getString("Street"),
                     rs.getString("Barangay"),
                     rs.getString("CityMunicipality"),
                     rs.getString("Province"),
                     rs.getObject("AdmitDate"),
                     rs.getLong("ElderlyRoomNo"),
                     rs.getLong("AttendantID")
                 };
                 table.addRow(row);
             }
             elderlyReport.getElderlyTable().setModel(table);
             elderlyReport.setVisible(true);
             this.setVisible(false);
             rs.close();
             pst.close();
             con.close();
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
         }
    }//GEN-LAST:event_reportTextMouseClicked

    private void visitorSuffixMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorSuffixMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_visitorSuffixMouseClicked

    private void visitorSuffixMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorSuffixMousePressed
        if(visitorSuffix.getText().equals("Suffix Name")){
            visitorSuffix.setText("");
            visitorSuffix.setFocusable(true);
        }
    }//GEN-LAST:event_visitorSuffixMousePressed

    private void visitorSuffixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visitorSuffixActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_visitorSuffixActionPerformed

    private void visitorGenderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorGenderMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_visitorGenderMouseClicked

    private void visitorGenderMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorGenderMousePressed
        if(visitorGender.getText().equals("Gender")){
            visitorGender.setText("");
            visitorGender.setFocusable(true);
        }
    }//GEN-LAST:event_visitorGenderMousePressed

    private void visitorGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visitorGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_visitorGenderActionPerformed

    private void visitorContactMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorContactMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_visitorContactMouseClicked

    private void visitorContactMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorContactMousePressed
        if(visitorContact.getText().equals("Contact Number")){
            visitorContact.setText("");
            visitorContact.setFocusable(true);
        }
    }//GEN-LAST:event_visitorContactMousePressed

    private void visitorContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visitorContactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_visitorContactActionPerformed

    private void visitorEmailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorEmailMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_visitorEmailMouseClicked

    private void visitorEmailMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorEmailMousePressed
        if(visitorEmail.getText().equals("Email Address")){
            visitorEmail.setText("");
            visitorEmail.setFocusable(true);
        }
    }//GEN-LAST:event_visitorEmailMousePressed

    private void visitorEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visitorEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_visitorEmailActionPerformed

    private void visitorStreetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorStreetMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_visitorStreetMouseClicked

    private void visitorStreetMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorStreetMousePressed
        if(visitorStreet.getText().equals("Street")){
            visitorStreet.setText("");
            visitorStreet.setFocusable(true);
        }
    }//GEN-LAST:event_visitorStreetMousePressed

    private void visitorStreetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visitorStreetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_visitorStreetActionPerformed

    private void addDateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDateButtonActionPerformed
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            String sql = "INSERT INTO dateofvisit(VisitorID, ElderlyID, VisitDate, VisitTime) VALUES (?, ?, ?, ?)";
            PreparedStatement pst = con.prepareStatement(sql);
            
            int visitorid = Integer.parseInt(visitorID.getText());
            pst.setInt(1, visitorid);
            int elderlyid = Integer.parseInt(elderlyID.getText());
            pst.setInt(2, elderlyid);
            String visitTime = visitorVisitTime.getText();
            pst.setString(4, visitTime);

            //Date
            DateTimeFormatter formatter;
                    formatter = DateTimeFormatter.ofPattern("yyyy/MM/dd");
            
            LocalDate visitDate = visitorVisitDate.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            String formattedVisitDate = visitDate.format(formatter);
            pst.setString(3, formattedVisitDate);
            
            int result = pst.executeUpdate();
            
            if(result == 1){
                JOptionPane.showMessageDialog(this, "Date Added Successfully!");
                VisitorDetails visitorDetails = new VisitorDetails();
                visitorDetails.setVisible(true);
                this.setVisible(false);
                pst.close();
                con.close();
            }
            else{
                JOptionPane.showMessageDialog(this, "Record failed to add!");
            }
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
        
        VisitorDetails visitorDetails = new VisitorDetails();
        String database = "SELECT visitor.VisitorID, visitor.FirstName, visitor.MiddleName, visitor.LastName, visitor.SuffixName, visitor.Gender, visitor.BirthDate, visitor.Relationship, visitor.ContactNo, visitor.Email, visitor.Street, visitor.Barangay, visitor.CityMunicipality, visitor.Province FROM visitor";
        try{
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            PreparedStatement pst = con.prepareStatement(database);
            ResultSet rs = pst.executeQuery();
            DefaultTableModel table = (DefaultTableModel) visitorDetails.getVisitorTable().getModel();
            table.setRowCount(0);

            while(rs.next()){
                Object[] row = {
                    rs.getInt("visitor.VisitorID"),
                    rs.getString("visitor.FirstName"),
                    rs.getString("visitor.MiddleName"),
                    rs.getString("visitor.LastName"),
                    rs.getString("visitor.SuffixName"),
                    rs.getString("visitor.Gender"),
                    rs.getObject("visitor.BirthDate"),
                    rs.getString("visitor.Relationship"),
                    rs.getLong("visitor.ContactNo"),
                    rs.getString("visitor.Email"),
                    rs.getString("visitor.Street"),
                    rs.getString("visitor.Barangay"),
                    rs.getString("visitor.CityMunicipality"),
                    rs.getString("visitor.Province"),
                };
                table.addRow(row);
            }
            visitorDetails.getVisitorTable().setModel(table);
            visitorDetails.setVisible(true);
            this.setVisible(false);
            rs.close();
            pst.close();
            con.close();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
    }//GEN-LAST:event_addDateButtonActionPerformed

    private void visitorRelationshipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visitorRelationshipActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_visitorRelationshipActionPerformed

    private void visitorRelationshipMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorRelationshipMousePressed
        if(visitorRelationship.getText().equals("Relationship to Elderly")){
            visitorRelationship.setText("");
            visitorRelationship.setFocusable(true);
        }
    }//GEN-LAST:event_visitorRelationshipMousePressed

    private void visitorRelationshipMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorRelationshipMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_visitorRelationshipMouseClicked

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        visitorLastTextField.setFocusable(true);
        visitorFirstTextField.setFocusable(true);
        visitorMiddleTextField.setFocusable(true);
        visitorSuffix.setFocusable(true);
        visitorGender.setFocusable(true);
        visitorBirthdate.setFocusable(true);
        visitorContact.setFocusable(true);
        visitorEmail.setFocusable(true);
        visitorStreet.setFocusable(true);
        visitorBrgy.setFocusable(true);
        visitorCity.setFocusable(true);
        visitorProvince.setFocusable(true);
        visitorRelationship.setFocusable(true);
        visitorVisitDate.setFocusable(true);
        visitorVisitTime.setFocusable(true);
        visitorID.setFocusable(true);
        elderlyID.setFocusable(true);
    }//GEN-LAST:event_formMouseEntered

    private void visitorFirstTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorFirstTextFieldMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_visitorFirstTextFieldMouseClicked

    private void visitorVisitTimeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorVisitTimeMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_visitorVisitTimeMouseClicked

    private void visitorVisitTimeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorVisitTimeMousePressed
        if(visitorVisitTime.getText().equals("Visit Time")){
            visitorVisitTime.setText("");
            visitorVisitTime.setFocusable(true);
        }
    }//GEN-LAST:event_visitorVisitTimeMousePressed

    private void visitorVisitTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visitorVisitTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_visitorVisitTimeActionPerformed

    private void visitorContactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_visitorContactKeyTyped
        char c = evt.getKeyChar();
        
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_visitorContactKeyTyped

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        VisitorDetails visitorDetails = new VisitorDetails();
        String database = "SELECT visitor.VisitorID, visitor.FirstName, visitor.MiddleName, visitor.LastName, visitor.SuffixName, visitor.Gender, visitor.BirthDate, visitor.Relationship, visitor.ContactNo, visitor.Email, visitor.Street, visitor.Barangay, visitor.CityMunicipality, visitor.Province FROM visitor";
        try{
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            PreparedStatement pst = con.prepareStatement(database);
            ResultSet rs = pst.executeQuery();
            DefaultTableModel table = (DefaultTableModel) visitorDetails.getVisitorTable().getModel();
            table.setRowCount(0);

            while(rs.next()){
                Object[] row = {
                    rs.getInt("visitor.VisitorID"),
                    rs.getString("visitor.FirstName"),
                    rs.getString("visitor.MiddleName"),
                    rs.getString("visitor.LastName"),
                    rs.getString("visitor.SuffixName"),
                    rs.getString("visitor.Gender"),
                    rs.getObject("visitor.BirthDate"),
                    rs.getString("visitor.Relationship"),
                    rs.getLong("visitor.ContactNo"),
                    rs.getString("visitor.Email"),
                    rs.getString("visitor.Street"),
                    rs.getString("visitor.Barangay"),
                    rs.getString("visitor.CityMunicipality"),
                    rs.getString("visitor.Province"),
                };
                table.addRow(row);
            }
            visitorDetails.getVisitorTable().setModel(table);
            visitorDetails.setVisible(true);
            this.setVisible(false);
            rs.close();
            pst.close();
            con.close();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
    }//GEN-LAST:event_backButtonActionPerformed

    private void addVisitorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addVisitorButtonActionPerformed
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            String sql = "INSERT INTO visitor(LastName, FirstName, MiddleName, SuffixName, Gender, BirthDate, ContactNo, Email, Street, Barangay, CityMunicipality, Province, Relationship) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            PreparedStatement pst = con.prepareStatement(sql);
            
            String lastName = visitorLastTextField.getText();
            pst.setString(1, lastName);
            String firstName = visitorFirstTextField.getText();
            pst.setString(2, firstName);
            String middleName = visitorMiddleTextField.getText();
            pst.setString(3, middleName);
            String suffixName = visitorSuffix.getText();
            pst.setString(4, suffixName);
            String gender = visitorGender.getText();
            pst.setString(5, gender);
            String email = visitorEmail.getText();
            pst.setString(8, email);
            String street = visitorStreet.getText();
            pst.setString(9, street);
            String brgy = visitorBrgy.getText();
            pst.setString(10, brgy);
            String city = visitorCity.getText();
            pst.setString(11, city);
            String province = visitorProvince.getText();
            pst.setString(12, province);
            String relationship = visitorRelationship.getText();
            pst.setString(13, relationship);

            //Date
            DateTimeFormatter formatter, time;
                    formatter = DateTimeFormatter.ofPattern("yyyy/MM/dd");
            LocalDate birthDate = visitorBirthdate.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            String formattedBirthDate = birthDate.format(formatter);
            pst.setString(6, formattedBirthDate);

            //Contact Number
            String contactNo = visitorContact.getText();
            
            if(contactNo.length() == 11){
                //it will limit the contact number length to only 11 characters
                long ContactNo = Long.parseLong(contactNo);
                pst.setString(7, Long.toString(ContactNo));

            }
            else{
                JOptionPane.showMessageDialog(null, "Invalid Contact Number");
            }
            
            int result = pst.executeUpdate();
            
            if(result == 1){
                JOptionPane.showMessageDialog(this, "Visitor Added Successfully!");
            }
            else{
                JOptionPane.showMessageDialog(this, "Record failed to add!");
            }
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
    }//GEN-LAST:event_addVisitorButtonActionPerformed

    private void visitorIDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorIDMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_visitorIDMouseClicked

    private void visitorIDMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorIDMousePressed
        if(visitorID.getText().equals("Assign to Visitor ID")){
            visitorID.setText("");
            visitorID.setFocusable(true);
        }
    }//GEN-LAST:event_visitorIDMousePressed

    private void visitorIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visitorIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_visitorIDActionPerformed

    private void visitorIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_visitorIDKeyTyped
        char c = evt.getKeyChar();
        
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_visitorIDKeyTyped

    private void visitorVisitDateMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorVisitDateMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_visitorVisitDateMousePressed

    private void elderlyIDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyIDMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_elderlyIDMouseClicked

    private void elderlyIDMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyIDMousePressed
        if(elderlyID.getText().equals("Assign to Elderly ID")){
            elderlyID.setText("");
            elderlyID.setFocusable(true);
        }
    }//GEN-LAST:event_elderlyIDMousePressed

    private void elderlyIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elderlyIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_elderlyIDActionPerformed

    private void elderlyIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_elderlyIDKeyTyped
        //it will only type a number
        char c = evt.getKeyChar();
        
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_elderlyIDKeyTyped

    private void adminLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminLogoMouseClicked
        VisitorInformationLogOut logout = new VisitorInformationLogOut();
        logout.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_adminLogoMouseClicked

    private void adminSettingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminSettingsMouseClicked
        VisitorInformationLogOut logout = new VisitorInformationLogOut();
        logout.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_adminSettingsMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VisitorInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VisitorInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VisitorInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VisitorInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VisitorInformation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addDateButton;
    private javax.swing.JButton addVisitorButton;
    private javax.swing.JLabel adminLogo;
    private javax.swing.JLabel adminSettings;
    private javax.swing.JLabel attendantLogo;
    private javax.swing.JLabel attendantText;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel careFacilitytxt;
    private javax.swing.JLabel closeWhiteLogo;
    private javax.swing.JLabel dashboardLogo;
    private javax.swing.JPanel dashboardNavBG;
    private javax.swing.JPanel dashboardSideBarBG;
    private javax.swing.JLabel dashboardText;
    private javax.swing.JLabel dateInfoText;
    private javax.swing.JTextField elderlyID;
    private javax.swing.JLabel elderlyIDText;
    private javax.swing.JLabel elderlyLogo;
    private javax.swing.JLabel elderlyText;
    private javax.swing.JLabel minimizeWhiteLogo;
    private javax.swing.JPanel personalInfoBG;
    private javax.swing.JLabel personalInfoText;
    private javax.swing.JPanel personalVisitInfoBG;
    private javax.swing.JLabel reportLogo;
    private javax.swing.JLabel reportText;
    private javax.swing.JLabel stJudetxt;
    private javax.swing.JLabel visitorAddressText;
    private javax.swing.JLabel visitorAdmitDateText;
    private javax.swing.JLabel visitorAdmitTimeText;
    private javax.swing.JLabel visitorBackground;
    private com.toedter.calendar.JDateChooser visitorBirthdate;
    private javax.swing.JLabel visitorBirthdateText;
    private javax.swing.JTextField visitorBrgy;
    private javax.swing.JLabel visitorBrgyText;
    private javax.swing.JTextField visitorCity;
    private javax.swing.JLabel visitorCityText;
    private javax.swing.JTextField visitorContact;
    private javax.swing.JLabel visitorContactNoText;
    private javax.swing.JTextField visitorEmail;
    private javax.swing.JLabel visitorEmailText;
    private javax.swing.JLabel visitorFirstText;
    private javax.swing.JTextField visitorFirstTextField;
    private javax.swing.JTextField visitorGender;
    private javax.swing.JLabel visitorGenderText;
    private javax.swing.JTextField visitorID;
    private javax.swing.JLabel visitorIDText;
    private javax.swing.JLabel visitorInformationText;
    private javax.swing.JLabel visitorLastName;
    private javax.swing.JTextField visitorLastTextField;
    private javax.swing.JLabel visitorLogo;
    private javax.swing.JLabel visitorMiddleText;
    private javax.swing.JTextField visitorMiddleTextField;
    private javax.swing.JTextField visitorProvince;
    private javax.swing.JLabel visitorProvinceText;
    private javax.swing.JTextField visitorRelationship;
    private javax.swing.JLabel visitorRelationshipText;
    private javax.swing.JTextField visitorStreet;
    private javax.swing.JLabel visitorStreetText;
    private javax.swing.JTextField visitorSuffix;
    private javax.swing.JLabel visitorSuffixText;
    private javax.swing.JLabel visitorText;
    private com.toedter.calendar.JDateChooser visitorVisitDate;
    private javax.swing.JTextField visitorVisitTime;
    // End of variables declaration//GEN-END:variables
}
