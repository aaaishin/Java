/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package visitormanagementsystem;

import java.awt.*;
import java.sql.*;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author justi
 */
public class AttendantDetails extends javax.swing.JFrame {

    /**
     * Creates new form Dashboard
     */
    
    ImageIcon logo = new ImageIcon("C:\\Users\\justi\\Desktop\\Programming\\Java\\VisitorManagementSystem\\src\\assets\\SJCF_LOGO.png");
    
    public AttendantDetails() {
        initComponents();
        setBackground(new Color(0,0,0,0));
        attendantLastTextField.setFocusable(false);
        attendantFirstTextField.setFocusable(false);
        attendantMiddleTextField.setFocusable(false);
        attendantGender.setFocusable(false);
        attendantContact.setFocusable(false);
        attendantSuffix.setFocusable(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dashboardNavBG = new javax.swing.JPanel();
        stJudetxt = new javax.swing.JLabel();
        adminSettings = new javax.swing.JLabel();
        careFacilitytxt = new javax.swing.JLabel();
        adminLogo = new javax.swing.JLabel();
        minimizeWhiteLogo = new javax.swing.JLabel();
        closeWhiteLogo = new javax.swing.JLabel();
        dashboardSideBarBG = new javax.swing.JPanel();
        reportText = new javax.swing.JLabel();
        reportLogo = new javax.swing.JLabel();
        visitorText = new javax.swing.JLabel();
        visitorLogo = new javax.swing.JLabel();
        elderlyText = new javax.swing.JLabel();
        elderlyLogo = new javax.swing.JLabel();
        dashboardText = new javax.swing.JLabel();
        dashboardLogo = new javax.swing.JLabel();
        attendantLogo = new javax.swing.JLabel();
        attendantText = new javax.swing.JLabel();
        attendantDetailsText = new javax.swing.JLabel();
        personalInfoBG = new javax.swing.JPanel();
        attendantLastName = new javax.swing.JLabel();
        attendantLastTextField = new javax.swing.JTextField();
        attendantFirstText = new javax.swing.JLabel();
        attendantFirstTextField = new javax.swing.JTextField();
        attendantMiddleText = new javax.swing.JLabel();
        attendantMiddleTextField = new javax.swing.JTextField();
        attendantSuffixText = new javax.swing.JLabel();
        attendantSuffix = new javax.swing.JTextField();
        attendantBirthdateText = new javax.swing.JLabel();
        attendantBirthdate = new com.toedter.calendar.JDateChooser();
        attendantContact = new javax.swing.JTextField();
        attendantContactNoText = new javax.swing.JLabel();
        attendantGender = new javax.swing.JTextField();
        attendantGenderText = new javax.swing.JLabel();
        attendantAddButton = new javax.swing.JButton();
        attendantUpdateButton = new javax.swing.JButton();
        attendantDeleteButton = new javax.swing.JButton();
        attendantScroll = new javax.swing.JScrollPane();
        attendantTable = new javax.swing.JTable();
        attendantBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("St. Jude Care Facility");
        setIconImage(logo.getImage());
        setName("dashboardFrame"); // NOI18N
        setUndecorated(true);
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        dashboardNavBG.setBackground(new java.awt.Color(129, 159, 29));
        dashboardNavBG.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        stJudetxt.setFont(new java.awt.Font("Segoe UI Black", 1, 36)); // NOI18N
        stJudetxt.setForeground(new java.awt.Color(255, 255, 255));
        stJudetxt.setText("St. Jude");
        stJudetxt.setFocusable(false);
        dashboardNavBG.add(stJudetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 160, 60));

        adminSettings.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        adminSettings.setForeground(new java.awt.Color(255, 255, 255));
        adminSettings.setText("ADMINISTRATOR");
        adminSettings.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        adminSettings.setFocusable(false);
        adminSettings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                adminSettingsMouseClicked(evt);
            }
        });
        dashboardNavBG.add(adminSettings, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 0, -1, 60));

        careFacilitytxt.setFont(new java.awt.Font("Segoe UI Light", 1, 36)); // NOI18N
        careFacilitytxt.setForeground(new java.awt.Color(255, 255, 255));
        careFacilitytxt.setText("Care Facility");
        careFacilitytxt.setFocusable(false);
        dashboardNavBG.add(careFacilitytxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 0, -1, 60));

        adminLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/adminLogo.png"))); // NOI18N
        adminLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        adminLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                adminLogoMouseClicked(evt);
            }
        });
        dashboardNavBG.add(adminLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 10, -1, -1));

        minimizeWhiteLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/minimizeWhiteLogo.png"))); // NOI18N
        minimizeWhiteLogo.setToolTipText("Minimize");
        minimizeWhiteLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimizeWhiteLogo.setFocusable(false);
        minimizeWhiteLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeWhiteLogoMouseClicked(evt);
            }
        });
        dashboardNavBG.add(minimizeWhiteLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 20, -1, -1));

        closeWhiteLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/closeWhiteLogo.png"))); // NOI18N
        closeWhiteLogo.setToolTipText("Close");
        closeWhiteLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        closeWhiteLogo.setFocusable(false);
        closeWhiteLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeWhiteLogoMouseClicked(evt);
            }
        });
        dashboardNavBG.add(closeWhiteLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 20, -1, -1));

        getContentPane().add(dashboardNavBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1020, 60));

        dashboardSideBarBG.setBackground(new java.awt.Color(42, 52, 11));
        dashboardSideBarBG.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        reportText.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        reportText.setForeground(new java.awt.Color(255, 255, 255));
        reportText.setText("REPORT");
        reportText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        reportText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reportTextMouseClicked(evt);
            }
        });
        dashboardSideBarBG.add(reportText, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 520, -1, -1));

        reportLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/reportLogo.png"))); // NOI18N
        reportLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        reportLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reportLogoMouseClicked(evt);
            }
        });
        reportLogo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                reportLogoKeyPressed(evt);
            }
        });
        dashboardSideBarBG.add(reportLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 450, -1, -1));

        visitorText.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        visitorText.setForeground(new java.awt.Color(255, 255, 255));
        visitorText.setText("VISITOR");
        visitorText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        visitorText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                visitorTextMouseClicked(evt);
            }
        });
        dashboardSideBarBG.add(visitorText, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, -1, -1));

        visitorLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/visitorLogo.png"))); // NOI18N
        visitorLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        visitorLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                visitorLogoMouseClicked(evt);
            }
        });
        dashboardSideBarBG.add(visitorLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, -1, -1));

        elderlyText.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        elderlyText.setForeground(new java.awt.Color(255, 255, 255));
        elderlyText.setText("ELDERLY");
        elderlyText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        elderlyText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                elderlyTextMouseClicked(evt);
            }
        });
        dashboardSideBarBG.add(elderlyText, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, -1, -1));

        elderlyLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/elderlyLogo.png"))); // NOI18N
        elderlyLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        elderlyLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                elderlyLogoMouseClicked(evt);
            }
        });
        dashboardSideBarBG.add(elderlyLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, -1, -1));

        dashboardText.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        dashboardText.setForeground(new java.awt.Color(255, 255, 255));
        dashboardText.setText("DASHBOARD");
        dashboardText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dashboardText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashboardTextMouseClicked(evt);
            }
        });
        dashboardSideBarBG.add(dashboardText, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        dashboardLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/dashboardLogo.png"))); // NOI18N
        dashboardLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dashboardLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashboardLogoMouseClicked(evt);
            }
        });
        dashboardSideBarBG.add(dashboardLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, -1, -1));

        attendantLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/attendantLogo.png"))); // NOI18N
        attendantLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        attendantLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attendantLogoMouseClicked(evt);
            }
        });
        dashboardSideBarBG.add(attendantLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, -1, -1));

        attendantText.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        attendantText.setForeground(new java.awt.Color(255, 255, 255));
        attendantText.setText("ATTENDANT");
        attendantText.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        attendantText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attendantTextMouseClicked(evt);
            }
        });
        dashboardSideBarBG.add(attendantText, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, -1, -1));

        getContentPane().add(dashboardSideBarBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 160, 560));

        attendantDetailsText.setFont(new java.awt.Font("Verdana Pro Black", 1, 28)); // NOI18N
        attendantDetailsText.setForeground(new java.awt.Color(129, 159, 29));
        attendantDetailsText.setText("ATTENDANT DETAILS");
        attendantDetailsText.setFocusable(false);
        getContentPane().add(attendantDetailsText, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 70, 420, 30));

        personalInfoBG.setBackground(new java.awt.Color(255, 255, 255));
        personalInfoBG.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(129, 159, 29), 5, true));
        personalInfoBG.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        attendantLastName.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        attendantLastName.setForeground(new java.awt.Color(107, 132, 22));
        attendantLastName.setText("Last Name*");
        attendantLastName.setFocusable(false);
        personalInfoBG.add(attendantLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 80, 20));

        attendantLastTextField.setBackground(new java.awt.Color(231, 228, 228));
        attendantLastTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        attendantLastTextField.setForeground(new java.awt.Color(107, 132, 22));
        attendantLastTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        attendantLastTextField.setToolTipText("Last Name");
        attendantLastTextField.setBorder(null);
        attendantLastTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attendantLastTextFieldMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                attendantLastTextFieldMousePressed(evt);
            }
        });
        attendantLastTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attendantLastTextFieldActionPerformed(evt);
            }
        });
        personalInfoBG.add(attendantLastTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 180, 40));

        attendantFirstText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        attendantFirstText.setForeground(new java.awt.Color(107, 132, 22));
        attendantFirstText.setText("First Name*");
        attendantFirstText.setFocusable(false);
        personalInfoBG.add(attendantFirstText, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, 80, 20));

        attendantFirstTextField.setBackground(new java.awt.Color(231, 228, 228));
        attendantFirstTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        attendantFirstTextField.setForeground(new java.awt.Color(107, 132, 22));
        attendantFirstTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        attendantFirstTextField.setToolTipText("First Name");
        attendantFirstTextField.setBorder(null);
        attendantFirstTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attendantFirstTextFieldMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                attendantFirstTextFieldMousePressed(evt);
            }
        });
        attendantFirstTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attendantFirstTextFieldActionPerformed(evt);
            }
        });
        personalInfoBG.add(attendantFirstTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, 180, 40));

        attendantMiddleText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        attendantMiddleText.setForeground(new java.awt.Color(107, 132, 22));
        attendantMiddleText.setText("Middle Name");
        attendantMiddleText.setFocusable(false);
        personalInfoBG.add(attendantMiddleText, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 10, 80, 20));

        attendantMiddleTextField.setBackground(new java.awt.Color(231, 228, 228));
        attendantMiddleTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        attendantMiddleTextField.setForeground(new java.awt.Color(107, 132, 22));
        attendantMiddleTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        attendantMiddleTextField.setToolTipText("First Name");
        attendantMiddleTextField.setBorder(null);
        attendantMiddleTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attendantMiddleTextFieldMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                attendantMiddleTextFieldMousePressed(evt);
            }
        });
        attendantMiddleTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attendantMiddleTextFieldActionPerformed(evt);
            }
        });
        personalInfoBG.add(attendantMiddleTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 30, 190, 40));

        attendantSuffixText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        attendantSuffixText.setForeground(new java.awt.Color(107, 132, 22));
        attendantSuffixText.setText("Suffix Name");
        attendantSuffixText.setFocusable(false);
        personalInfoBG.add(attendantSuffixText, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 10, 80, 20));

        attendantSuffix.setBackground(new java.awt.Color(231, 228, 228));
        attendantSuffix.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        attendantSuffix.setForeground(new java.awt.Color(107, 132, 22));
        attendantSuffix.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        attendantSuffix.setToolTipText("Suffix Name");
        attendantSuffix.setBorder(null);
        attendantSuffix.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attendantSuffixMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                attendantSuffixMousePressed(evt);
            }
        });
        attendantSuffix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attendantSuffixActionPerformed(evt);
            }
        });
        personalInfoBG.add(attendantSuffix, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 30, 80, 40));

        attendantBirthdateText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        attendantBirthdateText.setForeground(new java.awt.Color(107, 132, 22));
        attendantBirthdateText.setText("Birthdate*");
        attendantBirthdateText.setFocusable(false);
        personalInfoBG.add(attendantBirthdateText, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 80, 20));

        attendantBirthdate.setBackground(new java.awt.Color(231, 228, 228));
        attendantBirthdate.setForeground(new java.awt.Color(107, 132, 22));
        attendantBirthdate.setToolTipText("Birth Date");
        attendantBirthdate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        personalInfoBG.add(attendantBirthdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 230, 40));

        attendantContact.setBackground(new java.awt.Color(231, 228, 228));
        attendantContact.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        attendantContact.setForeground(new java.awt.Color(107, 132, 22));
        attendantContact.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        attendantContact.setToolTipText("Contact Number");
        attendantContact.setBorder(null);
        attendantContact.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attendantContactMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                attendantContactMousePressed(evt);
            }
        });
        attendantContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attendantContactActionPerformed(evt);
            }
        });
        attendantContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                attendantContactKeyTyped(evt);
            }
        });
        personalInfoBG.add(attendantContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, 380, 40));

        attendantContactNoText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        attendantContactNoText.setForeground(new java.awt.Color(107, 132, 22));
        attendantContactNoText.setText("Contact Number*");
        attendantContactNoText.setFocusable(false);
        personalInfoBG.add(attendantContactNoText, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 90, 110, 20));

        attendantGender.setBackground(new java.awt.Color(231, 228, 228));
        attendantGender.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        attendantGender.setForeground(new java.awt.Color(107, 132, 22));
        attendantGender.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        attendantGender.setToolTipText("Gender");
        attendantGender.setBorder(null);
        attendantGender.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attendantGenderMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                attendantGenderMousePressed(evt);
            }
        });
        attendantGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attendantGenderActionPerformed(evt);
            }
        });
        personalInfoBG.add(attendantGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 30, 130, 40));

        attendantGenderText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        attendantGenderText.setForeground(new java.awt.Color(107, 132, 22));
        attendantGenderText.setText("Gender*");
        attendantGenderText.setFocusable(false);
        personalInfoBG.add(attendantGenderText, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 10, 80, 20));

        attendantAddButton.setBackground(new java.awt.Color(176, 212, 55));
        attendantAddButton.setFont(new java.awt.Font("Verdana Pro Black", 1, 18)); // NOI18N
        attendantAddButton.setForeground(new java.awt.Color(255, 255, 255));
        attendantAddButton.setText("ADD");
        attendantAddButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        attendantAddButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attendantAddButtonMouseClicked(evt);
            }
        });
        attendantAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attendantAddButtonActionPerformed(evt);
            }
        });
        personalInfoBG.add(attendantAddButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 80, 160, 30));

        attendantUpdateButton.setBackground(new java.awt.Color(176, 212, 55));
        attendantUpdateButton.setFont(new java.awt.Font("Verdana Pro Black", 1, 18)); // NOI18N
        attendantUpdateButton.setForeground(new java.awt.Color(255, 255, 255));
        attendantUpdateButton.setText("UPDATE");
        attendantUpdateButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        attendantUpdateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attendantUpdateButtonMouseClicked(evt);
            }
        });
        attendantUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attendantUpdateButtonActionPerformed(evt);
            }
        });
        personalInfoBG.add(attendantUpdateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 110, 160, 30));

        attendantDeleteButton.setBackground(new java.awt.Color(176, 212, 55));
        attendantDeleteButton.setFont(new java.awt.Font("Verdana Pro Black", 1, 18)); // NOI18N
        attendantDeleteButton.setForeground(new java.awt.Color(255, 255, 255));
        attendantDeleteButton.setText("DELETE");
        attendantDeleteButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        attendantDeleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attendantDeleteButtonMouseClicked(evt);
            }
        });
        attendantDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attendantDeleteButtonActionPerformed(evt);
            }
        });
        personalInfoBG.add(attendantDeleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 140, 160, 30));

        getContentPane().add(personalInfoBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, 840, 180));

        attendantTable.setBackground(new java.awt.Color(231, 228, 228));
        attendantTable.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(129, 159, 29), 1, true));
        attendantTable.setForeground(new java.awt.Color(107, 132, 22));
        attendantTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "AttendantID", "LastName", "FirstName", "MiddleName", "SuffixName", "Gender", "BirthDate", "ContactNo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Long.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        attendantTable.setGridColor(new java.awt.Color(129, 159, 29));
        attendantTable.setSelectionBackground(new java.awt.Color(183, 216, 72));
        attendantTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        attendantTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        attendantTable.setShowGrid(true);
        attendantScroll.setViewportView(attendantTable);

        getContentPane().add(attendantScroll, new org.netbeans.lib.awtextra.AbsoluteConstraints(176, 301, 830, 310));

        attendantBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/dashboardBackground.png"))); // NOI18N
        attendantBackground.setText("jLabel1");
        attendantBackground.setPreferredSize(new java.awt.Dimension(1020, 570));
        getContentPane().add(attendantBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 620));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void minimizeWhiteLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeWhiteLogoMouseClicked
        this.setExtendedState(Login.ICONIFIED);
    }//GEN-LAST:event_minimizeWhiteLogoMouseClicked

    private void closeWhiteLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeWhiteLogoMouseClicked
        ExitDialog exDiag = new ExitDialog();
        exDiag.setVisible(true);
    }//GEN-LAST:event_closeWhiteLogoMouseClicked

    private void elderlyLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyLogoMouseClicked
         ElderlyDetails elderlyDetails = new ElderlyDetails();
         String database = "SELECT ElderlyID, FirstName, MiddleName, LastName, SuffixName, Gender, BirthDate, ContactNo, GuardianName, Street, Barangay, CityMunicipality, Province, AdmitDate, ElderlyRoomNo FROM elderly";
         
         try{
             Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
             PreparedStatement pst = con.prepareStatement(database);
             ResultSet rs = pst.executeQuery();
             DefaultTableModel table = (DefaultTableModel) elderlyDetails.getElderlyTable().getModel();
             table.setRowCount(0);
             
             while(rs.next()){
                 Object[] row = {
                     rs.getInt("ElderlyID"),
                     rs.getString("FirstName"),
                     rs.getString("MiddleName"),
                     rs.getString("LastName"),
                     rs.getString("SuffixName"),
                     rs.getString("Gender"),
                     rs.getObject("BirthDate"),
                     rs.getLong("ContactNo"),
                     rs.getString("GuardianName"),
                     rs.getString("Street"),
                     rs.getString("Barangay"),
                     rs.getString("CityMunicipality"),
                     rs.getString("Province"),
                     rs.getObject("AdmitDate"),
                     rs.getLong("ElderlyRoomNo")
                 };
                 table.addRow(row);
             }
             elderlyDetails.getElderlyTable().setModel(table);
             elderlyDetails.setVisible(true);
             this.setVisible(false);
             rs.close();
             pst.close();
             con.close();
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
         }
    }//GEN-LAST:event_elderlyLogoMouseClicked

    private void elderlyTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elderlyTextMouseClicked
         ElderlyDetails elderlyDetails = new ElderlyDetails();
         String database = "SELECT ElderlyID, FirstName, MiddleName, LastName, SuffixName, Gender, BirthDate, ContactNo, GuardianName, Street, Barangay, CityMunicipality, Province, AdmitDate, ElderlyRoomNo FROM elderly";
         
         try{
             Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
             PreparedStatement pst = con.prepareStatement(database);
             ResultSet rs = pst.executeQuery();
             DefaultTableModel table = (DefaultTableModel) elderlyDetails.getElderlyTable().getModel();
             table.setRowCount(0);
             
             while(rs.next()){
                 Object[] row = {
                     rs.getInt("ElderlyID"),
                     rs.getString("FirstName"),
                     rs.getString("MiddleName"),
                     rs.getString("LastName"),
                     rs.getString("SuffixName"),
                     rs.getString("Gender"),
                     rs.getObject("BirthDate"),
                     rs.getLong("ContactNo"),
                     rs.getString("GuardianName"),
                     rs.getString("Street"),
                     rs.getString("Barangay"),
                     rs.getString("CityMunicipality"),
                     rs.getString("Province"),
                     rs.getObject("AdmitDate"),
                     rs.getLong("ElderlyRoomNo")
                 };
                 table.addRow(row);
             }
             elderlyDetails.getElderlyTable().setModel(table);
             elderlyDetails.setVisible(true);
             this.setVisible(false);
             rs.close();
             pst.close();
             con.close();
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
         }
    }//GEN-LAST:event_elderlyTextMouseClicked

    private void dashboardLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboardLogoMouseClicked
        Dashboard dashboard = new Dashboard();
        try{
            String database = "SELECT COUNT(*) AS visitorCount FROM visitor";
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            PreparedStatement pst = con.prepareStatement(database);
            ResultSet rs = pst.executeQuery();
            while(rs.next()){
                int count = rs.getInt("visitorCount");
                dashboard.visitorCounter.setText(String.valueOf(count));
            }
            
            dashboard.setVisible(true);
            this.setVisible(false);
            rs.close();
            pst.close();
            con.close();
        
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
        try{
            String database = "SELECT COUNT(*) AS elderlyCount FROM elderly";
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            PreparedStatement pst = con.prepareStatement(database);
            ResultSet rs = pst.executeQuery();
            while(rs.next()){
                int count = rs.getInt("elderlyCount");
                dashboard.elderlyCounter.setText(String.valueOf(count));
            }
            
            dashboard.setVisible(true);
            this.setVisible(false);
            rs.close();
            pst.close();
            con.close();
        
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
    }//GEN-LAST:event_dashboardLogoMouseClicked

    private void dashboardTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboardTextMouseClicked
        Dashboard dashboard = new Dashboard();
        try{
            String database = "SELECT COUNT(*) AS visitorCount FROM visitor";
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            PreparedStatement pst = con.prepareStatement(database);
            ResultSet rs = pst.executeQuery();
            while(rs.next()){
                int count = rs.getInt("visitorCount");
                dashboard.visitorCounter.setText(String.valueOf(count));
            }
            
            dashboard.setVisible(true);
            this.setVisible(false);
            rs.close();
            pst.close();
            con.close();
        
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
        try{
            String database = "SELECT COUNT(*) AS elderlyCount FROM elderly";
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            PreparedStatement pst = con.prepareStatement(database);
            ResultSet rs = pst.executeQuery();
            while(rs.next()){
                int count = rs.getInt("elderlyCount");
                dashboard.elderlyCounter.setText(String.valueOf(count));
            }
            
            dashboard.setVisible(true);
            this.setVisible(false);
            rs.close();
            pst.close();
            con.close();
        
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
    }//GEN-LAST:event_dashboardTextMouseClicked

    private void visitorLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorLogoMouseClicked
        VisitorDetails visitorDetails = new VisitorDetails();
        String database = "SELECT visitor.VisitorID, visitor.FirstName, visitor.MiddleName, visitor.LastName, visitor.SuffixName, visitor.Gender, visitor.BirthDate, visitor.Relationship, visitor.ContactNo, visitor.Email, visitor.Street, visitor.Barangay, visitor.CityMunicipality, visitor.Province FROM visitor";
        try{
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            PreparedStatement pst = con.prepareStatement(database);
            ResultSet rs = pst.executeQuery();
            DefaultTableModel table = (DefaultTableModel) visitorDetails.getVisitorTable().getModel();
            table.setRowCount(0);

            while(rs.next()){
                Object[] row = {
                    rs.getInt("visitor.VisitorID"),
                    rs.getString("visitor.FirstName"),
                    rs.getString("visitor.MiddleName"),
                    rs.getString("visitor.LastName"),
                    rs.getString("visitor.SuffixName"),
                    rs.getString("visitor.Gender"),
                    rs.getObject("visitor.BirthDate"),
                    rs.getString("visitor.Relationship"),
                    rs.getLong("visitor.ContactNo"),
                    rs.getString("visitor.Email"),
                    rs.getString("visitor.Street"),
                    rs.getString("visitor.Barangay"),
                    rs.getString("visitor.CityMunicipality"),
                    rs.getString("visitor.Province"),
                };
                table.addRow(row);
            }
            visitorDetails.getVisitorTable().setModel(table);
            visitorDetails.setVisible(true);
            this.setVisible(false);
            rs.close();
            pst.close();
            con.close();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
    }//GEN-LAST:event_visitorLogoMouseClicked

    private void visitorTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitorTextMouseClicked
        VisitorDetails visitorDetails = new VisitorDetails();
        String database = "SELECT visitor.VisitorID, visitor.FirstName, visitor.MiddleName, visitor.LastName, visitor.SuffixName, visitor.Gender, visitor.BirthDate, visitor.Relationship, visitor.ContactNo, visitor.Email, visitor.Street, visitor.Barangay, visitor.CityMunicipality, visitor.Province FROM visitor";
        try{
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            PreparedStatement pst = con.prepareStatement(database);
            ResultSet rs = pst.executeQuery();
            DefaultTableModel table = (DefaultTableModel) visitorDetails.getVisitorTable().getModel();
            table.setRowCount(0);

            while(rs.next()){
                Object[] row = {
                    rs.getInt("visitor.VisitorID"),
                    rs.getString("visitor.FirstName"),
                    rs.getString("visitor.MiddleName"),
                    rs.getString("visitor.LastName"),
                    rs.getString("visitor.SuffixName"),
                    rs.getString("visitor.Gender"),
                    rs.getObject("visitor.BirthDate"),
                    rs.getString("visitor.Relationship"),
                    rs.getLong("visitor.ContactNo"),
                    rs.getString("visitor.Email"),
                    rs.getString("visitor.Street"),
                    rs.getString("visitor.Barangay"),
                    rs.getString("visitor.CityMunicipality"),
                    rs.getString("visitor.Province"),
                };
                table.addRow(row);
            }
            visitorDetails.getVisitorTable().setModel(table);
            visitorDetails.setVisible(true);
            this.setVisible(false);
            rs.close();
            pst.close();
            con.close();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
    }//GEN-LAST:event_visitorTextMouseClicked

    private void attendantLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendantLogoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_attendantLogoMouseClicked

    private void attendantTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendantTextMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_attendantTextMouseClicked

    private void reportLogoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_reportLogoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_reportLogoKeyPressed

    private void reportLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportLogoMouseClicked
         ElderlyReport elderlyReport = new ElderlyReport();
         String database = "SELECT ElderlyID, FirstName, MiddleName, LastName, SuffixName, Gender, BirthDate, ContactNo, GuardianName, Street, Barangay, CityMunicipality, Province, AdmitDate, ElderlyRoomNo, AttendantID FROM elderly";
         
         try{
             Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
             PreparedStatement pst = con.prepareStatement(database);
             ResultSet rs = pst.executeQuery();
             DefaultTableModel table = (DefaultTableModel) elderlyReport.getElderlyTable().getModel();
             table.setRowCount(0);
             
             while(rs.next()){
                 Object[] row = {
                     rs.getLong("ElderlyID"),
                     rs.getString("FirstName"),
                     rs.getString("MiddleName"),
                     rs.getString("LastName"),
                     rs.getString("SuffixName"),
                     rs.getString("Gender"),
                     rs.getObject("BirthDate"),
                     rs.getLong("ContactNo"),
                     rs.getString("GuardianName"),
                     rs.getString("Street"),
                     rs.getString("Barangay"),
                     rs.getString("CityMunicipality"),
                     rs.getString("Province"),
                     rs.getObject("AdmitDate"),
                     rs.getLong("ElderlyRoomNo"),
                     rs.getLong("AttendantID")
                 };
                 table.addRow(row);
             }
             elderlyReport.getElderlyTable().setModel(table);
             elderlyReport.setVisible(true);
             this.setVisible(false);
             rs.close();
             pst.close();
             con.close();
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
         }
    }//GEN-LAST:event_reportLogoMouseClicked

    private void reportTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportTextMouseClicked
         ElderlyReport elderlyReport = new ElderlyReport();
         String database = "SELECT ElderlyID, FirstName, MiddleName, LastName, SuffixName, Gender, BirthDate, ContactNo, GuardianName, Street, Barangay, CityMunicipality, Province, AdmitDate, ElderlyRoomNo, AttendantID FROM elderly";
         
         try{
             Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
             PreparedStatement pst = con.prepareStatement(database);
             ResultSet rs = pst.executeQuery();
             DefaultTableModel table = (DefaultTableModel) elderlyReport.getElderlyTable().getModel();
             table.setRowCount(0);
             
             while(rs.next()){
                 Object[] row = {
                     rs.getLong("ElderlyID"),
                     rs.getString("FirstName"),
                     rs.getString("MiddleName"),
                     rs.getString("LastName"),
                     rs.getString("SuffixName"),
                     rs.getString("Gender"),
                     rs.getObject("BirthDate"),
                     rs.getLong("ContactNo"),
                     rs.getString("GuardianName"),
                     rs.getString("Street"),
                     rs.getString("Barangay"),
                     rs.getString("CityMunicipality"),
                     rs.getString("Province"),
                     rs.getObject("AdmitDate"),
                     rs.getLong("ElderlyRoomNo"),
                     rs.getLong("AttendantID")
                 };
                 table.addRow(row);
             }
             elderlyReport.getElderlyTable().setModel(table);
             elderlyReport.setVisible(true);
             this.setVisible(false);
             rs.close();
             pst.close();
             con.close();
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
         }
    }//GEN-LAST:event_reportTextMouseClicked

    private void attendantLastTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendantLastTextFieldMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_attendantLastTextFieldMouseClicked

    private void attendantLastTextFieldMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendantLastTextFieldMousePressed
        if(attendantLastTextField.getText().equals("Last Name")){
            attendantLastTextField.setText("");
            attendantLastTextField.setFocusable(true);
        }
    }//GEN-LAST:event_attendantLastTextFieldMousePressed

    private void attendantLastTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attendantLastTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_attendantLastTextFieldActionPerformed

    private void attendantFirstTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendantFirstTextFieldMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_attendantFirstTextFieldMouseClicked

    private void attendantFirstTextFieldMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendantFirstTextFieldMousePressed
        if(attendantFirstTextField.getText().equals("First Name")){
            attendantFirstTextField.setText("");
            attendantFirstTextField.setFocusable(true);
        }
    }//GEN-LAST:event_attendantFirstTextFieldMousePressed

    private void attendantFirstTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attendantFirstTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_attendantFirstTextFieldActionPerformed

    private void attendantMiddleTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendantMiddleTextFieldMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_attendantMiddleTextFieldMouseClicked

    private void attendantMiddleTextFieldMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendantMiddleTextFieldMousePressed
        if(attendantMiddleTextField.getText().equals("Middle Name")){
            attendantMiddleTextField.setText("");
            attendantMiddleTextField.setFocusable(true);
        }
    }//GEN-LAST:event_attendantMiddleTextFieldMousePressed

    private void attendantMiddleTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attendantMiddleTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_attendantMiddleTextFieldActionPerformed

    private void attendantSuffixMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendantSuffixMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_attendantSuffixMouseClicked

    private void attendantSuffixMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendantSuffixMousePressed
        if(attendantSuffix.getText().equals("Suffix Name")){
            attendantSuffix.setText("");
            attendantSuffix.setFocusable(true);
        }
    }//GEN-LAST:event_attendantSuffixMousePressed

    private void attendantSuffixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attendantSuffixActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_attendantSuffixActionPerformed

    private void attendantContactMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendantContactMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_attendantContactMouseClicked

    private void attendantContactMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendantContactMousePressed
        if(attendantContact.getText().equals("Contact Number")){
            attendantContact.setText("");
            attendantContact.setFocusable(true);
        }
    }//GEN-LAST:event_attendantContactMousePressed

    private void attendantContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attendantContactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_attendantContactActionPerformed

    private void attendantGenderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendantGenderMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_attendantGenderMouseClicked

    private void attendantGenderMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendantGenderMousePressed
        if(attendantGender.getText().equals("Gender")){
            attendantGender.setText("");
            attendantGender.setFocusable(true);
        }
    }//GEN-LAST:event_attendantGenderMousePressed

    private void attendantGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attendantGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_attendantGenderActionPerformed

    private void attendantAddButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendantAddButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_attendantAddButtonMouseClicked

    private void attendantAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attendantAddButtonActionPerformed
        try{
            //inputting data in the textfields and clicking the add button will add the attendant details
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            PreparedStatement pst = con.prepareStatement("INSERT INTO attendant (FirstName, MiddleName, LastName, SuffixName, Gender, BirthDate, ContactNo) VALUES (?, ?, ?, ?, ?, ?, ?)");

            String lastname = attendantLastTextField.getText();
            pst.setString(1, lastname);
            String firstname = attendantFirstTextField.getText();
            pst.setString(2, firstname);
            String middlename = attendantMiddleTextField.getText();
            pst.setString(3, middlename);
            String suffixname = attendantSuffix.getText();
            pst.setString(4, suffixname);
            String gender = attendantGender.getText();
            pst.setString(5, gender);

            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy/MM/dd");
            LocalDate birthDate = attendantBirthdate.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            String formattedBirthDate = birthDate.format(formatter);
            pst.setString(6, formattedBirthDate);

            String contactNo = attendantContact.getText();

            if(contactNo.length() == 11){
                long ContactNo = Long.parseLong(contactNo);
                pst.setString(7, Long.toString(ContactNo));
            }
            else{
                JOptionPane.showMessageDialog(null, "Invalid Contact Number");
            }
            
            int result = pst.executeUpdate();
            
            if(result == 1){
                JOptionPane.showMessageDialog(this, "Record Added Successfully!");
                attendantLastTextField.setText("");
                attendantFirstTextField.setText("");
                attendantMiddleTextField.setText("");
                attendantSuffix.setText("");
                attendantGender.setText("");
                attendantContact.setText("");
            }
            else{
                JOptionPane.showMessageDialog(this, "Record failed to save!");
            }
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
        
        AttendantDetails attendantDetails = new AttendantDetails();
         String database = "SELECT attendant.AttendantID, attendant.FirstName, attendant.MiddleName, attendant.LastName, attendant.SuffixName, attendant.Gender, attendant.BirthDate, attendant.ContactNo FROM attendant";
         
         try{
             //by clicking the add button, it will update the contents of the table
             Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
             PreparedStatement pst = con.prepareStatement(database);
             ResultSet rs = pst.executeQuery();
             DefaultTableModel table = (DefaultTableModel) attendantDetails.getAttendantTable().getModel();
             table.setRowCount(0);
             
             while(rs.next()){
                 Object[] row = {
                     rs.getString("attendant.AttendantID"),
                     rs.getString("attendant.FirstName"),
                     rs.getString("attendant.MiddleName"),
                     rs.getString("attendant.LastName"),
                     rs.getString("attendant.SuffixName"),
                     rs.getString("attendant.Gender"),
                     rs.getString("attendant.BirthDate"),
                     rs.getString("attendant.ContactNo")
                 };
                 table.addRow(row);
             }
             attendantDetails.getAttendantTable().setModel(table);
             attendantDetails.setVisible(true);
             this.setVisible(false);
             rs.close();
             pst.close();
             con.close();
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
         }
    }//GEN-LAST:event_attendantAddButtonActionPerformed

    private void attendantUpdateButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendantUpdateButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_attendantUpdateButtonMouseClicked

    private void attendantUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attendantUpdateButtonActionPerformed
        //it will go to the AttendantUpdate JFrame 
        AttendantUpdate attendantUpdate = new AttendantUpdate();
         attendantUpdate.setVisible(true);
         this.setVisible(false);
    }//GEN-LAST:event_attendantUpdateButtonActionPerformed

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        attendantLastTextField.setFocusable(true);
        attendantFirstTextField.setFocusable(true);
        attendantMiddleTextField.setFocusable(true);
        attendantSuffix.setFocusable(true);
        attendantGender.setFocusable(true);
        attendantBirthdate.setFocusable(true);
        attendantContact.setFocusable(true);

    }//GEN-LAST:event_formMouseEntered

    private void attendantContactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_attendantContactKeyTyped
        char c = evt.getKeyChar();
        
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_attendantContactKeyTyped

    private void attendantDeleteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendantDeleteButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_attendantDeleteButtonMouseClicked

    private void attendantDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attendantDeleteButtonActionPerformed
        //It will go to the AttendantDelete JFrame
        AttendantDelete attendantDelete = new AttendantDelete();
         attendantDelete.setVisible(true);
         this.setVisible(false);
    }//GEN-LAST:event_attendantDeleteButtonActionPerformed

    private void adminLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminLogoMouseClicked
        AttendantDetailsLogOut logout = new AttendantDetailsLogOut();
        logout.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_adminLogoMouseClicked

    private void adminSettingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminSettingsMouseClicked
        AttendantDetailsLogOut logout = new AttendantDetailsLogOut();
        logout.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_adminSettingsMouseClicked

    public JTable getAttendantTable(){
        return attendantTable;
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AttendantDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AttendantDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AttendantDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AttendantDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AttendantDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel adminLogo;
    private javax.swing.JLabel adminSettings;
    private javax.swing.JButton attendantAddButton;
    private javax.swing.JLabel attendantBackground;
    private com.toedter.calendar.JDateChooser attendantBirthdate;
    private javax.swing.JLabel attendantBirthdateText;
    private javax.swing.JTextField attendantContact;
    private javax.swing.JLabel attendantContactNoText;
    private javax.swing.JButton attendantDeleteButton;
    private javax.swing.JLabel attendantDetailsText;
    private javax.swing.JLabel attendantFirstText;
    private javax.swing.JTextField attendantFirstTextField;
    private javax.swing.JTextField attendantGender;
    private javax.swing.JLabel attendantGenderText;
    private javax.swing.JLabel attendantLastName;
    private javax.swing.JTextField attendantLastTextField;
    private javax.swing.JLabel attendantLogo;
    private javax.swing.JLabel attendantMiddleText;
    private javax.swing.JTextField attendantMiddleTextField;
    private javax.swing.JScrollPane attendantScroll;
    private javax.swing.JTextField attendantSuffix;
    private javax.swing.JLabel attendantSuffixText;
    private javax.swing.JTable attendantTable;
    private javax.swing.JLabel attendantText;
    private javax.swing.JButton attendantUpdateButton;
    private javax.swing.JLabel careFacilitytxt;
    private javax.swing.JLabel closeWhiteLogo;
    private javax.swing.JLabel dashboardLogo;
    private javax.swing.JPanel dashboardNavBG;
    private javax.swing.JPanel dashboardSideBarBG;
    private javax.swing.JLabel dashboardText;
    private javax.swing.JLabel elderlyLogo;
    private javax.swing.JLabel elderlyText;
    private javax.swing.JLabel minimizeWhiteLogo;
    private javax.swing.JPanel personalInfoBG;
    private javax.swing.JLabel reportLogo;
    private javax.swing.JLabel reportText;
    private javax.swing.JLabel stJudetxt;
    private javax.swing.JLabel visitorLogo;
    private javax.swing.JLabel visitorText;
    // End of variables declaration//GEN-END:variables
}
