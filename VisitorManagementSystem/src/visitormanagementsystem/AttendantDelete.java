/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package visitormanagementsystem;

import java.awt.*;
import java.sql.*;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author justi
 */
public class AttendantDelete extends javax.swing.JFrame {

    /**
     * Creates new form Dashboard
     */
    
    ImageIcon logo = new ImageIcon("C:\\Users\\justi\\Desktop\\Programming\\Java\\VisitorManagementSystem\\src\\assets\\SJCF_LOGO.png");
    
    public AttendantDelete() {
        initComponents();
        setBackground(new Color(0,0,0,0));
        attendantID.setFocusable(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        attendantDetailsText = new javax.swing.JLabel();
        minimizeLogo = new javax.swing.JLabel();
        personalInfoBG = new javax.swing.JPanel();
        attendantIDText = new javax.swing.JLabel();
        attendantID = new javax.swing.JTextField();
        attendantBackButton = new javax.swing.JButton();
        attendantDeleteButton = new javax.swing.JButton();
        attendantBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("St. Jude Care Facility");
        setName("dashboardFrame"); // NOI18N
        setUndecorated(true);
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        attendantDetailsText.setFont(new java.awt.Font("Verdana Pro Black", 1, 24)); // NOI18N
        attendantDetailsText.setForeground(new java.awt.Color(129, 159, 29));
        attendantDetailsText.setText("ATTENDANT DETAILS");
        attendantDetailsText.setFocusable(false);
        getContentPane().add(attendantDetailsText, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, 320, 30));

        minimizeLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/minimizeLogo.png"))); // NOI18N
        minimizeLogo.setToolTipText("Minimize");
        minimizeLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimizeLogo.setFocusable(false);
        minimizeLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeLogoMouseClicked(evt);
            }
        });
        getContentPane().add(minimizeLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 10, -1, -1));

        personalInfoBG.setBackground(new java.awt.Color(255, 255, 255));
        personalInfoBG.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(129, 159, 29), 5, true));
        personalInfoBG.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        attendantIDText.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        attendantIDText.setForeground(new java.awt.Color(107, 132, 22));
        attendantIDText.setText("AttendantID*");
        attendantIDText.setFocusable(false);
        personalInfoBG.add(attendantIDText, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, 80, 20));

        attendantID.setBackground(new java.awt.Color(231, 228, 228));
        attendantID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        attendantID.setForeground(new java.awt.Color(107, 132, 22));
        attendantID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        attendantID.setToolTipText("Last Name");
        attendantID.setBorder(null);
        attendantID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attendantIDMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                attendantIDMousePressed(evt);
            }
        });
        attendantID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attendantIDActionPerformed(evt);
            }
        });
        attendantID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                attendantIDKeyTyped(evt);
            }
        });
        personalInfoBG.add(attendantID, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 310, 40));

        attendantBackButton.setBackground(new java.awt.Color(176, 212, 55));
        attendantBackButton.setFont(new java.awt.Font("Verdana Pro Black", 1, 18)); // NOI18N
        attendantBackButton.setForeground(new java.awt.Color(255, 255, 255));
        attendantBackButton.setText("GO BACK");
        attendantBackButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        attendantBackButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attendantBackButtonMouseClicked(evt);
            }
        });
        attendantBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attendantBackButtonActionPerformed(evt);
            }
        });
        personalInfoBG.add(attendantBackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 140, 30));

        attendantDeleteButton.setBackground(new java.awt.Color(176, 212, 55));
        attendantDeleteButton.setFont(new java.awt.Font("Verdana Pro Black", 1, 18)); // NOI18N
        attendantDeleteButton.setForeground(new java.awt.Color(255, 255, 255));
        attendantDeleteButton.setText("DELETE");
        attendantDeleteButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        attendantDeleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attendantDeleteButtonMouseClicked(evt);
            }
        });
        attendantDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attendantDeleteButtonActionPerformed(evt);
            }
        });
        personalInfoBG.add(attendantDeleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 90, 140, 30));

        getContentPane().add(personalInfoBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 360, 150));

        attendantBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/dashboardBackground.png"))); // NOI18N
        attendantBackground.setText("jLabel1");
        attendantBackground.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(129, 159, 29), 10, true));
        attendantBackground.setPreferredSize(new java.awt.Dimension(1020, 570));
        getContentPane().add(attendantBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 440, 250));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void attendantDeleteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendantDeleteButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_attendantDeleteButtonMouseClicked

    private void attendantDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attendantDeleteButtonActionPerformed
        try{
            Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
            PreparedStatement pst = con.prepareStatement("DELETE FROM attendant WHERE AttendantID = ?");
            
            int attendantid = Integer.parseInt(attendantID.getText());
            pst.setInt(1, attendantid);
            
            int result = pst.executeUpdate();
            
            if(result == 1){
                JOptionPane.showMessageDialog(this, "Record Delete Successfully!");
                attendantID.setText("");
            }
            else{
                JOptionPane.showMessageDialog(this, "Record failed to delete!");
            }
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
        }
        
         AttendantDetails attendantDetails = new AttendantDetails();
         String database = "SELECT attendant.AttendantID, attendant.FirstName, attendant.MiddleName, attendant.LastName, attendant.SuffixName, attendant.Gender, attendant.BirthDate, attendant.ContactNo FROM attendant";
         
         try{
             Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
             PreparedStatement pst = con.prepareStatement(database);
             ResultSet rs = pst.executeQuery();
             DefaultTableModel table = (DefaultTableModel) attendantDetails.getAttendantTable().getModel();
             table.setRowCount(0);
             
             while(rs.next()){
                 Object[] row = {
                     rs.getLong("attendant.AttendantID"),
                     rs.getString("attendant.FirstName"),
                     rs.getString("attendant.MiddleName"),
                     rs.getString("attendant.LastName"),
                     rs.getString("attendant.SuffixName"),
                     rs.getString("attendant.Gender"),
                     rs.getObject("attendant.BirthDate"),
                     rs.getLong("attendant.ContactNo"),
                 };
                 table.addRow(row);
             }
             attendantDetails.getAttendantTable().setModel(table);
             attendantDetails.setVisible(true);
             this.setVisible(false);
             rs.close();
             pst.close();
             con.close();
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
         }
    }//GEN-LAST:event_attendantDeleteButtonActionPerformed

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        attendantID.setFocusable(true);

    }//GEN-LAST:event_formMouseEntered

    private void attendantBackButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendantBackButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_attendantBackButtonMouseClicked

    private void attendantBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attendantBackButtonActionPerformed
         AttendantDetails attendantDetails = new AttendantDetails();
         String database = "SELECT attendant.AttendantID, attendant.FirstName, attendant.MiddleName, attendant.LastName, attendant.SuffixName, attendant.Gender, attendant.BirthDate, attendant.ContactNo FROM attendant";
         
         try{
             Connection con = DriverManager.getConnection(DatabaseConnection.DB_CONNECTION,"root","root");
             PreparedStatement pst = con.prepareStatement(database);
             ResultSet rs = pst.executeQuery();
             DefaultTableModel table = (DefaultTableModel) attendantDetails.getAttendantTable().getModel();
             table.setRowCount(0);
             
             while(rs.next()){
                 Object[] row = {
                     rs.getString("attendant.AttendantID"),
                     rs.getString("attendant.FirstName"),
                     rs.getString("attendant.MiddleName"),
                     rs.getString("attendant.LastName"),
                     rs.getString("attendant.SuffixName"),
                     rs.getString("attendant.Gender"),
                     rs.getString("attendant.BirthDate"),
                     rs.getString("attendant.ContactNo"),
                 };
                 table.addRow(row);
             }
             attendantDetails.getAttendantTable().setModel(table);
             attendantDetails.setVisible(true);
             this.setVisible(false);
             rs.close();
             pst.close();
             con.close();
         }
         catch(Exception e){
             JOptionPane.showMessageDialog(null, "Connection Error!" + e.getMessage());
         }
    }//GEN-LAST:event_attendantBackButtonActionPerformed

    private void attendantIDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendantIDMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_attendantIDMouseClicked

    private void attendantIDMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendantIDMousePressed
        if(attendantID.getText().equals("Attendant ID")){
            attendantID.setText("");
            attendantID.setFocusable(true);
        }
    }//GEN-LAST:event_attendantIDMousePressed

    private void attendantIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attendantIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_attendantIDActionPerformed

    private void attendantIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_attendantIDKeyTyped
        char c = evt.getKeyChar();
        
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_attendantIDKeyTyped

    private void minimizeLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeLogoMouseClicked
        this.setExtendedState(AttendantDelete.ICONIFIED);
    }//GEN-LAST:event_minimizeLogoMouseClicked

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AttendantDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AttendantDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AttendantDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AttendantDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AttendantDelete().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton attendantBackButton;
    private javax.swing.JLabel attendantBackground;
    private javax.swing.JButton attendantDeleteButton;
    private javax.swing.JLabel attendantDetailsText;
    private javax.swing.JTextField attendantID;
    private javax.swing.JLabel attendantIDText;
    private javax.swing.JLabel minimizeLogo;
    private javax.swing.JPanel personalInfoBG;
    // End of variables declaration//GEN-END:variables
}
